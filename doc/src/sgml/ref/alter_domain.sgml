<!--
doc/src/sgml/ref/alter_domain.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERDOMAIN">
 <indexterm zone="sql-alterdomain">
  <primary>ALTER DOMAIN</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER DOMAIN</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER DOMAIN</refname>
  <refpurpose>
<!--
   change the definition of a domain
-->
ドメイン定義を変更する
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    { SET DEFAULT <replaceable class="PARAMETER">expression</replaceable> | DROP DEFAULT }
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    { SET | DROP } NOT NULL
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    ADD <replaceable class="PARAMETER">domain_constraint</replaceable> [ NOT VALID ]
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ] <replaceable class="PARAMETER">constraint_name</replaceable> [ RESTRICT | CASCADE ]
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
     RENAME CONSTRAINT <replaceable class="PARAMETER">constraint_name</replaceable> TO <replaceable class="PARAMETER">new_constraint_name</replaceable>
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    VALIDATE CONSTRAINT <replaceable class="PARAMETER">constraint_name</replaceable>
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    OWNER TO <replaceable class="PARAMETER">new_owner</replaceable>
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    RENAME TO <replaceable class="PARAMETER">new_name</replaceable>
ALTER DOMAIN <replaceable class="PARAMETER">name</replaceable>
    SET SCHEMA <replaceable class="PARAMETER">new_schema</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>ALTER DOMAIN</command> changes the definition of an existing domain.
   There are several sub-forms:
-->
<command>ALTER DOMAIN</command>は既存ドメインの定義を変更します。
以下に示す副構文があります。
  </para>

  <variablelist>
   <varlistentry>
    <term>SET/DROP DEFAULT</term>
    <listitem>
     <para>
<!--
      These forms set or remove the default value for a domain. Note
      that defaults only apply to subsequent <command>INSERT</command>
      commands; they do not affect rows already in a table using the domain.
-->
この構文はドメインのデフォルト値の設定または削除を行います。
指定したデフォルト値は、その後の<command>INSERT</command>コマンドのみに適用されることに注意してください。
そのドメインを使用したテーブルの既存の行には影響を与えません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>SET/DROP NOT NULL</term>
    <listitem>
     <para>
<!--
      These forms change whether a domain is marked to allow NULL
      values or to reject NULL values.  You can only <literal>SET NOT NULL</>
      when the columns using the domain contain no null values.
-->
この構文はドメインがNULL値を持つことができるかどうかを変更します。
<literal>SET NOT NULL</>を実行できるのは、ドメインを使用する列にNULL値が含まれていない場合のみです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>ADD <replaceable class="PARAMETER">domain_constraint</replaceable> [ NOT VALID ]</term>
    <listitem>
     <para>
<!--
      This form adds a new constraint to a domain using the same syntax as
      <xref linkend="SQL-CREATEDOMAIN">.
      When a new constraint is added to a domain, all columns using that
      domain will be checked against the newly added constraint.  These
      checks can be suppressed by adding the new constraint using the
      <literal>NOT VALID</literal> option; the constraint can later be made
      valid using <command>ALTER DOMAIN ... VALIDATE CONSTRAINT</command>.
      Newly inserted or updated rows are always checked against all
      constraints, even those marked <literal>NOT VALID</literal>.
      <literal>NOT VALID</> is only accepted for <literal>CHECK</> constraints.
-->
この構文は<xref linkend="SQL-CREATEDOMAIN">と同一の構文を使って、ドメインに新しい制約を付与します。
新しい制約がドメインに追加された時、そのドメインを使用するすべての列が新しく追加された制約に対して検査されます。
<literal>NOT VALID</literal>オプションを使用して新しい制約を追加することでこれらの検査を抑制することができます。
<command>ALTER DOMAIN ... VALIDATE CONSTRAINT</command>を使用することで、後で制約を有効にすることができます。
新しく挿入または更新される行については、<literal>NOT VALID</literal>と印が付いていたとしても、常にすべての制約が検査されます。
<literal>NOT VALID</literal>は<literal>CHECK</>制約でのみ受け付けられます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>DROP CONSTRAINT [ IF EXISTS ]</term>
    <listitem>
     <para>
<!--
      This form drops constraints on a domain.
      If <literal>IF EXISTS</literal> is specified and the constraint
      does not exist, no error is thrown. In this case a notice is issued instead.
-->
この構文はドメイン上の制約を削除します。
<literal>IF EXISTS</literal>が指定された場合、制約が存在しなくてもエラーになりません。
この場合は代わりに注意メッセージが発生します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>RENAME CONSTRAINT</term>
    <listitem>
     <para>
<!--
      This form changes the name of a constraint on a domain.
-->
この構文はドメイン上の制約名を変更します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>VALIDATE CONSTRAINT</term>
    <listitem>
     <para>
<!--
      This form validates a constraint previously added as
      <literal>NOT VALID</>, that is, verify that all data in columns using the
      domain satisfy the specified constraint.
-->
この構文は、以前に<literal>NOT VALID</>として追加された制約を検証します。
つまり、そのドメインを使用する列の中のすべてのデータが指定された制約を満たすかどうかを検証します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>OWNER</term>
    <listitem>
     <para>
<!--
      This form changes the owner of the domain to the specified user.
-->
この構文はドメインの所有者を指定したユーザに変更します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
<!--
      This form changes the name of the domain.
-->
この構文はドメインの名前を変更します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>SET SCHEMA</term>
    <listitem>
     <para>
<!--
      This form changes the schema of the domain.  Any constraints
      associated with the domain are moved into the new schema as well.
-->
この構文はドメインのスキーマを変更します。
ドメインに関連する制約もすべて新しいスキーマに移動します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   You must own the domain to use <command>ALTER DOMAIN</>.
   To change the schema of a domain, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the domain's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the domain.
   However, a superuser can alter ownership of any domain anyway.)
-->
<command>ALTER DOMAIN</>を使用するにはドメインを所有していなければなりません。
ドメインのスキーマを変更するには、新しいスキーマにおける<literal>CREATE</literal>権限を持たなければなりません。
所有者を変更するには、直接または間接的に新しいロールのメンバでなければなりません。
また、そのロールはドメインのスキーマにおいて<literal>CREATE</literal>を持たなければなりません。
（この制限により、所有者の変更により、ドメインの削除と再作成でできないことは何もできないようにしています。
しかし、スーパーユーザはすべてのドメインの所有者を変更することができます。）
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="PARAMETER">name</replaceable></term>
      <listitem>
       <para>
<!--
        The name (possibly schema-qualified) of an existing domain to
        alter.
-->
変更対象となる既存のドメインの名前です（スキーマ修飾名も可）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">domain_constraint</replaceable></term>
      <listitem>
       <para>
<!--
        New domain constraint for the domain.
-->
ドメイン用の新しいドメイン制約です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">constraint_name</replaceable></term>
      <listitem>
       <para>
<!--
        Name of an existing constraint to drop or rename.
-->
削除または名前を変更する既存の制約名です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">NOT VALID</replaceable></term>
      <listitem>
       <para>
<!--
        Do not verify existing column data for constraint validity.
-->
既存の列について制約の妥当性を検証しません。
       </para>
      </listitem>
     </varlistentry>


     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
<!--
        Automatically drop objects that depend on the constraint.
-->
その制約に依存するオブジェクトを自動的に削除します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
<!--
        Refuse to drop the constraint if there are any dependent
        objects. This is the default behavior.
-->
依存するオブジェクトがある場合、制約の削除要求を拒否します。
これがデフォルトの動作です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_name</replaceable></term>
      <listitem>
       <para>
<!--
        The new name for the domain.
-->
ドメインの新しい名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_constraint_name</replaceable></term>
      <listitem>
       <para>
<!--
        The new name for the constraint.
-->
制約の新しい名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_owner</replaceable></term>
      <listitem>
       <para>
<!--
        The user name of the new owner of the domain.
-->
ドメインの新しい所有者となるユーザの名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">new_schema</replaceable></term>
      <listitem>
       <para>
<!--
        The new schema for the domain.
-->
ドメインの新しいスキーマです。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Currently, <command>ALTER DOMAIN ADD CONSTRAINT</> and
   <command>ALTER DOMAIN SET NOT NULL</> will fail if the named domain or
   any derived domain is used within a composite-type column of any
   table in the database.  They should eventually be improved to be
   able to verify the new constraint for such nested columns.
-->
今のところ、<command>ALTER DOMAIN ADD CONSTRAINT</>と<command>ALTER DOMAIN SET NOT NULL</>は、指定されたドメインおよびその派生ドメインがデータベース内のいずれかのテーブルの複合型の列で使用されていた場合、失敗します。
これは少なくとも、こうした入れ子になった列に対する新しい制約を検証できるように改良されなければなりません。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To add a <literal>NOT NULL</literal> constraint to a domain:
-->
ドメインに<literal>NOT NULL</literal>制約を付与します。
<programlisting>
ALTER DOMAIN zipcode SET NOT NULL;
</programlisting>
<!--
   To remove a <literal>NOT NULL</literal> constraint from a domain:
-->
ドメインから<literal>NOT NULL</literal>制約を削除します。
<programlisting>
ALTER DOMAIN zipcode DROP NOT NULL;
</programlisting>
  </para>

  <para>
<!--
   To add a check constraint to a domain:
-->
ドメインにCHECK制約を付与します。
<programlisting>
ALTER DOMAIN zipcode ADD CONSTRAINT zipchk CHECK (char_length(VALUE) = 5);
</programlisting>
  </para>

  <para>
<!--
   To remove a check constraint from a domain:
-->
ドメインからCHECK制約を削除します。
<programlisting>
ALTER DOMAIN zipcode DROP CONSTRAINT zipchk;
</programlisting>
  </para>

  <para>
<!--
   To rename a check constraint on a domain:
-->
ドメイン上の検査制約の名前を変更します。
<programlisting>
ALTER DOMAIN zipcode RENAME CONSTRAINT zipchk TO zip_check;
</programlisting>
  </para>

  <para>
<!--
   To move the domain into a different schema:
-->
ドメインを新しいスキーマに移動します。
<programlisting>
ALTER DOMAIN zipcode SET SCHEMA customers;
</programlisting></para>
 </refsect1>

 <refsect1 id="SQL-ALTERDOMAIN-compatibility">
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   <command>ALTER DOMAIN</command> conforms to the <acronym>SQL</acronym>
   standard, except for the <literal>OWNER</>, <literal>RENAME</literal>, <literal>SET SCHEMA</>, and
   <literal>VALIDATE CONSTRAINT</> variants, which are
   <productname>PostgreSQL</productname> extensions.  The <literal>NOT VALID</>
   clause of the <literal>ADD CONSTRAINT</> variant is also a
   <productname>PostgreSQL</productname> extension.
-->
<command>ALTER DOMAIN</command>文は標準<acronym>SQL</acronym>に準拠しています。
ただし、<literal>OWNER</>、<literal>RENAME</literal>、<literal>SET SCHEMA</>、<literal>VALIDATE CONSTRAINT</>構文は例外で、<productname>PostgreSQL</productname>の拡張です。
<literal>ADD CONSTRAINT</>構文の<literal>NOT VALID</>句も<productname>PostgreSQL</productname>の拡張です。
  </para>
 </refsect1>

 <refsect1 id="SQL-ALTERDOMAIN-see-also">
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createdomain"></member>
   <member><xref linkend="sql-dropdomain"></member>
  </simplelist>
 </refsect1>

</refentry>
