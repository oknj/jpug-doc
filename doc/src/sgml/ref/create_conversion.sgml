<!-- doc/src/sgml/ref/create_conversion.sgml -->

<refentry id="SQL-CREATECONVERSION">
 <indexterm zone="sql-createconversion">
  <primary>CREATE CONVERSION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE CONVERSION</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE CONVERSION</refname>
<!--
  <refpurpose>define a new encoding conversion</refpurpose>
-->
  <refpurpose>新しい符号化方式変換を定義する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE [ DEFAULT ] CONVERSION <replaceable>name</replaceable>
    FOR <replaceable>source_encoding</replaceable> TO <replaceable>dest_encoding</replaceable> FROM <replaceable>function_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-createconversion-description">
<!--
  <title>Description</title>
-->
<title>説明</title>

  <para>
<!--
   <command>CREATE CONVERSION</command> defines a new conversion between
   character set encodings.  Also, conversions that
   are marked <literal>DEFAULT</> can be used for automatic encoding
   conversion between
   client and server. For this purpose, two conversions, from encoding A to
   B <emphasis>and</emphasis> from encoding B to A, must be defined.
-->
<command>CREATE CONVERSION</command>を使用すると、新しい文字セット符号化方式間の変換を定義できます。
また、<literal>DEFAULT</>として指定された変換は、クライアントとサーバの間での自動的な符号化方式の変換に使用できます。
このためには、符号化方式Aから符号化方式Bへ、<emphasis>および</emphasis>、符号化方式Bから符号化方式Aへという2つの変換を定義する必要があります。
 </para>

  <para>
<!--
   To be able to create a conversion, you must have <literal>EXECUTE</literal> privilege
   on the function and <literal>CREATE</literal> privilege on the destination schema.
-->
変換を作成するためには、その関数の<literal>EXECUTE</literal>権限、および、対象となるスキーマ上の<literal>CREATE</literal>権限を保持している必要があります。
  </para>
 </refsect1>


 <refsect1>
<!--
  <title>Parameters</title>
-->
<title>パラメータ</title>

   <variablelist>
    <varlistentry>
     <term><literal>DEFAULT</literal></term>

     <listitem>
      <para>
<!--
       The <literal>DEFAULT</> clause indicates that this conversion
       is the default for this particular source to destination
       encoding. There should be only one default encoding in a schema
       for the encoding pair.
-->
<literal>DEFAULT</>句により、この変換が、指定された変換元から対象となる符号化方式への変換のデフォルトであることが示されます。
1つのスキーマ内でデフォルトとされる変換は、符号化方式の組み合わせ1組において1つだけです。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>name</replaceable></term>

     <listitem>
      <para>
<!--
       The name of the conversion. The conversion name can be
       schema-qualified. If it is not, the conversion is defined in the
       current schema. The conversion name must be unique within a
       schema.
-->
変換の名前です。
変換名は、スキーマ修飾することができます。
スキーマ修飾されていない場合、変換は現在のスキーマに定義されます。
変換名は、スキーマ内で一意である必要があります。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>source_encoding</replaceable></term>

     <listitem>
      <para>
<!--
       The source encoding name.
-->
変換元の符号化方式名です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>dest_encoding</replaceable></term>

     <listitem>
      <para>
<!--
       The destination encoding name.
-->
変換先の符号化方式名です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>function_name</replaceable></term>

     <listitem>
      <para>
<!--
       The function used to perform the conversion.  The function name can
       be schema-qualified.  If it is not, the function will be looked
       up in the path.
-->
この関数は、変換の実行に使用されます。
関数名は、スキーマ修飾することができます。
スキーマ修飾されていない場合、関数はパスから検索されます。
      </para>

      <para>
<!--
       The function must have the following signature:
-->
関数は、下記のような形式で記述する必要があります。

<programlisting>
conv_proc(
<!--
    integer,  &#055;&#055; source encoding ID
    integer,  &#055;&#055; destination encoding ID
    cstring,  &#055;&#055; source string (null terminated C string)
    internal, &#055;&#055; destination (fill with a null terminated C string)
    integer   &#055;&#055; source string length
-->
    integer,  -- 変換元符号化方式ID
    integer,  -- 変換先符号化方式ID
    cstring,  -- 変換元文字列（NULLで終わるC言語文字列）
    internal, -- 変換先文字列（NULLで終わるC言語文字列）
    integer   -- 変換元文字列長
) RETURNS void;
</programlisting></para>
     </listitem>
    </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1 id="sql-createconversion-notes">
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Use <command>DROP CONVERSION</command> to remove user-defined conversions.
-->
ユーザ定義の変換を削除するには、<command>DROP CONVERSION</command>を使用します。
  </para>

  <para>
<!--
   The privileges required to create a conversion might be changed in a future
   release.
-->
変換の作成に必要な権限は、今後のリリースで変更される可能性があります。
  </para>
 </refsect1>

 <refsect1 id="sql-createconversion-examples">
<!--
  <title>Examples</title>
-->
<title>例</title>

  <para>
<!--
   To create a conversion from encoding <literal>UTF8</literal> to
   <literal>LATIN1</literal> using <function>myfunc</>:
-->
<function>myfunc</>関数を使用して、<literal>UTF8</literal>から<literal>LATIN1</literal>への符号化方式の変換を作成します。
<programlisting>
CREATE CONVERSION myconv FOR 'UTF8' TO 'LATIN1' FROM myfunc;
</programlisting></para>
 </refsect1>


 <refsect1 id="sql-createconversion-compat">
<!--
  <title>Compatibility</title>
-->
<title>互換性</title>

  <para>
<!--
    <command>CREATE CONVERSION</command>
    is a <productname>PostgreSQL</productname> extension.
    There is no <command>CREATE CONVERSION</command>
    statement in the SQL standard, but a <command>CREATE TRANSLATION</command>
    statement that is very similar in purpose and syntax.
-->
<command>CREATE CONVERSION</command>は、<productname>PostgreSQL</productname>の拡張です。
標準SQLには<command>CREATE CONVERSION</command>文はありませんが、<command>CREATE TRANSLATION</command>文の目的および構文は非常に似たものです。
  </para>
 </refsect1>


 <refsect1 id="sql-createconversion-seealso">
<!--
  <title>See Also</title>
-->
<title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterconversion"></member>
   <member><xref linkend="sql-createfunction"></member>
   <member><xref linkend="sql-dropconversion"></member>
  </simplelist>
 </refsect1>

</refentry>
