<!--
doc/src/sgml/ref/alter_aggregate.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERAGGREGATE">
 <indexterm zone="sql-alteraggregate">
  <primary>ALTER AGGREGATE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER AGGREGATE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER AGGREGATE</refname>
<!--
  <refpurpose>change the definition of an aggregate function</refpurpose>
-->
  <refpurpose>集約関数定義を変更する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) RENAME TO <replaceable>new_name</replaceable>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) OWNER TO <replaceable>new_owner</replaceable>
ALTER AGGREGATE <replaceable>name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) SET SCHEMA <replaceable>new_schema</replaceable>

<!--
<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>
-->
<phrase>ここで<replaceable>aggregate_signature</replaceable>は以下の通りです。</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>ALTER AGGREGATE</command> changes the definition of an
   aggregate function.
-->
<command>ALTER AGGREGATE</command>は集約関数の定義を変更します。
  </para>

  <para>
<!--
   You must own the aggregate function to use <command>ALTER AGGREGATE</>.
   To change the schema of an aggregate function, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the aggregate function's schema.  (These restrictions enforce that altering
   the owner doesn't do anything you couldn't do by dropping and recreating
   the aggregate function.  However, a superuser can alter ownership of any
   aggregate function anyway.)
-->
<command>ALTER AGGREGATE</>を使用するには集約関数の所有者でなければなりません。
集約関数のスキーマを変更するには、新しいスキーマにおける<literal>CREATE</literal>権限も必要です。
所有者を変更するには、直接または間接的に新しい所有者ロールのメンバでなければなりません。
また、そのロールは集約関数のスキーマにおいて<literal>CREATE</literal>権限を持たなければなりません。
（この制限により、集約関数の削除と再作成を行ってもできないことが、所有者の変更によってもできないようにしています。
しかし、スーパーユーザはすべての集約関数の所有者を変更することができます。）
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
<!--
      The name (optionally schema-qualified) of an existing aggregate function.
-->
既存の集約関数の名前です（スキーマ修飾名も可）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
     <para>
<!--
      The mode of an argument: <literal>IN</> or <literal>VARIADIC</>.
      If omitted, the default is <literal>IN</>.
-->
引数のモードで、<literal>IN</>あるいは<literal>VARIADIC</>です。
省略された時のデフォルトは<literal>IN</>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
     <para>
<!--
      The name of an argument.
      Note that <command>ALTER AGGREGATE</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the aggregate function's identity.
-->
引数の名前です。
<command>ALTER AGGREGATE</command>は実際には引数の名前を無視することに注意してください。
これは、集約関数の本体を特定するのに必要になるのは、引数のデータ型だけだからです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>
    <listitem>
     <para>
<!--
      An input data type on which the aggregate function operates.
      To reference a zero-argument aggregate function, write <literal>*</>
      in place of the list of argument specifications.
      To reference an ordered-set aggregate function, write
      <literal>ORDER BY</> between the direct and aggregated argument
      specifications.
-->
集約関数が演算する入力データ型です。
引数を持たない集約関数を参照するには、引数指定のリストに<literal>*</>と記載してください。
順序集約関数を参照するには、直接引数の指定と集約引数の指定の間に<literal>ORDER BY</>と書いてください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
     <para>
<!--
      The new name of the aggregate function.
-->
新しい集約関数の名前です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
     <para>
<!--
      The new owner of the aggregate function.
-->
新しい集約関数の所有者です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
     <para>
<!--
      The new schema for the aggregate function.
-->
集約関数の新しいスキーマです。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

   <para>
<!--
    The recommended syntax for referencing an ordered-set aggregate
    is to write <literal>ORDER BY</> between the direct and aggregated
    argument specifications, in the same style as in
    <xref linkend="sql-createaggregate">.  However, it will also work to
    omit <literal>ORDER BY</> and just run the direct and aggregated
    argument specifications into a single list.  In this abbreviated form,
    if <literal>VARIADIC "any"</> was used in both the direct and
    aggregated argument lists, write <literal>VARIADIC "any"</> only once.
-->
順序集約関数を参照するときの推奨される構文は、<xref linkend="sql-createaggregate">と同じ形式で、直接引数の指定と集約引数の指定の間に<literal>ORDER BY</>と書くことです。
しかし、<literal>ORDER BY</>を省略して、単に直接引数と集約引数を1つのリストにまとめても動作します。
<literal>VARIADIC "any"</>が直接引数のリストと集約引数のリストの両方に対して使われていた場合、この省略形式では<literal>VARIADIC "any"</>を1度だけ書いてください。
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To rename the aggregate function <literal>myavg</literal> for type
   <type>integer</type> to <literal>my_average</literal>:
-->
<type>integer</type>型用の<literal>myavg</literal>集約関数の名前を<literal>my_average</literal>に変更します。
<programlisting>
ALTER AGGREGATE myavg(integer) RENAME TO my_average;
</programlisting>
  </para>

  <para>
<!--
   To change the owner of the aggregate function <literal>myavg</literal> for type
   <type>integer</type> to <literal>joe</literal>:
-->
<type>integer</type>型用の<literal>myavg</literal>集約関数の所有者を<literal>joe</literal>に変更します。
<programlisting>
ALTER AGGREGATE myavg(integer) OWNER TO joe;
</programlisting>
  </para>

  <para>
<!--
   To move the ordered-set aggregate <literal>mypercentile</literal> with
   direct argument of type <type>float8</type> and aggregated argument
   of type <type>integer</type> into schema <literal>myschema</literal>:
-->
直接引数が<type>float8</type>型、集約引数が<type>integer</type>型の順序集約関数<literal>mypercentile</literal>を<literal>myschema</literal>スキーマに移動します。
<programlisting>
ALTER AGGREGATE mypercentile(float8 ORDER BY integer) SET SCHEMA myschema;
</programlisting>
<!--
   This will work too:
-->
以下も動作します。
<programlisting>
ALTER AGGREGATE mypercentile(float8, integer) SET SCHEMA myschema;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   There is no <command>ALTER AGGREGATE</command> statement in the SQL
   standard.
-->
標準SQLには<command>ALTER AGGREGATE</command>文はありません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createaggregate"></member>
   <member><xref linkend="sql-dropaggregate"></member>
  </simplelist>
 </refsect1>
</refentry>
