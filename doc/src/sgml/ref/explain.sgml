<!--
doc/src/sgml/ref/explain.sgml
PostgreSQL documentation
-->

<refentry id="SQL-EXPLAIN">
 <indexterm zone="sql-explain">
  <primary>EXPLAIN</primary>
 </indexterm>

 <indexterm zone="sql-explain">
<!--
  <primary>prepared statements</primary>
  <secondary>showing the query plan</secondary>
-->
  <primary>プリペアド文</primary>
  <secondary>の問い合わせ計画の表示</secondary>
 </indexterm>

 <indexterm zone="sql-explain">
<!--
  <primary>cursor</primary>
  <secondary>showing the query plan</secondary>
-->
  <primary>カーソル</primary>
  <secondary>の問い合わせ計画の表示</secondary>
 </indexterm>

 <refmeta>
  <refentrytitle>EXPLAIN</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>EXPLAIN</refname>
<!--
  <refpurpose>show the execution plan of a statement</refpurpose>
-->
  <refpurpose>問い合わせ文の実行計画を表示する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
EXPLAIN [ ( <replaceable class="parameter">option</replaceable> [, ...] ) ] <replaceable class="parameter">statement</replaceable>
EXPLAIN [ ANALYZE ] [ VERBOSE ] <replaceable class="parameter">statement</replaceable>

<!--
<phrase>where <replaceable class="parameter">option</replaceable> can be one of:</phrase>
-->
<phrase>ここで<replaceable class="parameter">option</replaceable>は以下のいずれかを取ることができます。</phrase>

    ANALYZE [ <replaceable class="parameter">boolean</replaceable> ]
    VERBOSE [ <replaceable class="parameter">boolean</replaceable> ]
    COSTS [ <replaceable class="parameter">boolean</replaceable> ]
    BUFFERS [ <replaceable class="parameter">boolean</replaceable> ]
    TIMING [ <replaceable class="parameter">boolean</replaceable> ]
    FORMAT { TEXT | XML | JSON | YAML }
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   This command displays the execution plan that the
   <productname>PostgreSQL</productname> planner generates for the
   supplied statement.  The execution plan shows how the table(s)
   referenced by the statement will be scanned &mdash; by plain sequential scan,
   index scan, etc. &mdash; and if multiple tables are referenced, what join
   algorithms will be used to bring together the required rows from
   each input table.
-->
与えられた文に対して、<productname>PostgreSQL</productname>プランナが生成する実行計画を表示します。  
実行計画は、問い合わせ文が参照するテーブル（複数の場合もある）をスキャンする方法（単純なシーケンススキャン、インデックススキャンなど）、複数のテーブルを参照する場合に、各テーブルから取り出した行を結合するために使用する結合アルゴリズムを示すものです。

  </para>

  <para>
<!--
   The most critical part of the display is the estimated statement execution
   cost, which is the planner's guess at how long it will take to run the
   statement (measured in cost units that are arbitrary, but conventionally
   mean disk page fetches).  Actually two numbers
   are shown: the start-up cost before the first row can be returned, and
   the total cost to return all the rows.  For most queries the total cost
   is what matters, but in contexts such as a subquery in <literal>EXISTS</literal>, the planner
   will choose the smallest start-up cost instead of the smallest total cost
   (since the executor will stop after getting one row, anyway).
   Also, if you limit the number of rows to return with a <literal>LIMIT</literal> clause,
   the planner makes an appropriate interpolation between the endpoint
   costs to estimate which plan is really the cheapest.
-->
表示内容の中でも、最も重要なのは、文の実行にかかるコストの見積もりです。
これは、プランナが文の実行にかかる時間（任意の、しかし慣習的にはディスクページ抽出を意味するコスト単位で計測）を推測したものです。
具体的には、2つの数が表示されます。
1つは最初の行が返されるまでのスタートアップコスト、もう1つはすべての行が返されるまでの合計コストです。
ほとんどの問い合わせにとって問題となるのは合計コストの方ですが、<literal>EXISTS</literal>副問い合わせなどのコンテキストでは、プランナは合計コストが最も短くなるプランよりも、スタートアップコストが最も短くなるプランを選びます（エクゼキュータは行を1つ取得した後に停止するからです）。
また、<literal>LIMIT</literal>句を使って問い合わせが返す行数を制限する場合、プランナは実際にはどの計画が一番低コストになるかを概算するため、全体を処理した場合のコストの間で適切な補間を行います。
  </para>

  <para>
<!--
   The <literal>ANALYZE</literal> option causes the statement to be actually
   executed, not only planned.  Then actual run time statistics are added to
   the display, including the total elapsed time expended within each plan
   node (in milliseconds) and the total number of rows it actually returned.
   This is useful for seeing whether the planner's estimates
   are close to reality.
-->
<literal>ANALYZE</literal>オプションを付けると、計画を作るだけでなく、文が実際に実行されます。
この場合は、各計画ノードで費された総経過時間（ミリ秒単位）と実際に返された全行数など、実際の実行時の統計情報が追加表示されます。
プランナの推測と実際の値が近いかどうかを確認するために、このオプションは有用です。
  </para>

  <important>
   <para>
<!--
    Keep in mind that the statement is actually executed when
    the <literal>ANALYZE</literal> option is used.  Although
    <command>EXPLAIN</command> will discard any output that a
    <command>SELECT</command> would return, other side effects of the
    statement will happen as usual.  If you wish to use
    <command>EXPLAIN ANALYZE</command> on an
    <command>INSERT</command>, <command>UPDATE</command>,
    <command>DELETE</command>, <command>CREATE TABLE AS</command>,
    or <command>EXECUTE</command> statement
    without letting the command affect your data, use this approach:
-->
<literal>ANALYZE</literal>を使用した場合は、文が実際に実行されることを忘れないでください。
<command>EXPLAIN</command>は<command>SELECT</command>が返す出力をまったく表示しませんが、文に伴う副作用は通常通り発生します。
<command>INSERT</command>、<command>UPDATE</command>、<command>DELETE</command>、<command>CREATE TABLE AS</command>、<command>EXECUTE</command>文に対して、データに影響を与えないように<command>EXPLAIN ANALYZE</command>を実行したい場合は、以下の方法を使用してください。
<programlisting>
BEGIN;
EXPLAIN ANALYZE ...;
ROLLBACK;
</programlisting>
   </para>
  </important>

  <para>
<!--
   Only the <literal>ANALYZE</literal> and <literal>VERBOSE</literal> options
   can be specified, and only in that order, without surrounding the option
   list in parentheses.  Prior to <productname>PostgreSQL</productname> 9.0,
   the unparenthesized syntax was the only one supported.  It is expected that
   all new options will be supported only in the parenthesized syntax.
-->
<literal>ANALYZE</literal>および<literal>VERBOSE</literal>オプションのみが、この順序でのみ、オプションリストを括弧で括ることなく、指定可能です。
<productname>PostgreSQL</productname> 9.0より前までは、括弧がない構文のみがサポートされていました。
すべての新しいオプションは括弧付き構文のみでサポートされることを想定しています。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><literal>ANALYZE</literal></term>
    <listitem>
     <para>
<!--
      Carry out the command and show actual run times and other statistics.
      This parameter defaults to <literal>FALSE</literal>.
-->
コマンドを実行し、実際の実行時間やその他の統計情報を表示します。
このパラメータのデフォルトは<literal>FALSE</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
<!--
      Display additional information regarding the plan.  Specifically, include
      the output column list for each node in the plan tree, schema-qualify
      table and function names, always label variables in expressions with
      their range table alias, and always print the name of each trigger for
      which statistics are displayed.  This parameter defaults to
      <literal>FALSE</literal>.
-->
計画についての追加情報を出力します。
具体的には、計画ツリー、スキーマ修飾テーブル、関数名内の各ノードに対して出力列リストを含めます。
常に範囲テーブルの別名を付けて式内の変数を命名し、また常に統計情報が表示される各トリガの名前を出力します。
このパラメータのデフォルトは<literal>FALSE</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>COSTS</literal></term>
    <listitem>
     <para>
<!--
      Include information on the estimated startup and total cost of each
      plan node, as well as the estimated number of rows and the estimated
      width of each row.
      This parameter defaults to <literal>TRUE</literal>.
-->
各計画ノードの推定起動コストと総コスト、さらに推定行数と各行の推定幅に関する情報を含めます。
このパラメータのデフォルトは<literal>TRUE</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>BUFFERS</literal></term>
    <listitem>
     <para>
<!--
      Include information on buffer usage. Specifically, include the number of
      shared blocks hit, read, dirtied, and written, the number of local blocks
      hit, read, dirtied, and written, and the number of temp blocks read and
      written.
      A <emphasis>hit</> means that a read was avoided because the block was
      found already in cache when needed.
      Shared blocks contain data from regular tables and indexes;
      local blocks contain data from temporary tables and indexes;
      while temp blocks contain short-term working data used in sorts, hashes,
      Materialize plan nodes, and similar cases.
      The number of blocks <emphasis>dirtied</> indicates the number of
      previously unmodified blocks that were changed by this query; while the
      number of blocks <emphasis>written</> indicates the number of
      previously-dirtied blocks evicted from cache by this backend during
      query processing.
      The number of blocks shown for an
      upper-level node includes those used by all its child nodes.  In text
      format, only non-zero values are printed.  This parameter may only be
      used when <literal>ANALYZE</literal> is also enabled.  It defaults to
      <literal>FALSE</literal>.
-->
バッファの使用状況に関する情報を含めます。
具体的には、共有ブロックのヒット数、読み取り数、ダーティブロック数、書き出し数、ローカルブロックのヒット数、ダーティブロック数、読み取り数、書き出し数、一時ブロックの読み取り数、書き出し数が含められます。
<emphasis>ヒット</>とは、必要な時にキャッシュ内にそのブロックが見つかったため読み取りが避けられたことを意味します。
共有ブロックには、通常のテーブルとインデックスからのデータが含まれます。
ローカルブロックには、一時テーブルとそのインデックスからのデータが含まれます。
一時ブロックには、ソートやハッシュ、マテリアライズ計画ノードなどで使用される短期間有効なデータが含まれます。
<emphasis>ダーティ</>ブロック数は、これまでは変更がなかったがその問い合わせによって変更されたブロックの数を示します。
<emphasis>書き出し</>ブロック数は、問い合わせ処理の間にバックエンドにより、ダーティ状態だったブロックの内キャッシュから追い出されたブロックの数を示します。
上位レベルのノードで表示されるブロック数には、その子ノードすべてで使用されるブロックが含まれます。
テキスト形式では、非ゼロの値のみが出力されます。
このパラメータは<literal>ANALYZE</literal>パラメータも有効である場合にのみ使用することができます。
デフォルトは<literal>FALSE</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TIMING</literal></term>
    <listitem>
     <para>
<!--
      Include actual startup time and time spent in each node in the output.
      The overhead of repeatedly reading the system clock can slow down the
      query significantly on some systems, so it may be useful to set this
      parameter to <literal>FALSE</literal> when only actual row counts, and
      not exact times, are needed.  Run time of the entire statement is
      always measured, even when node-level timing is turned off with this
      option.
      This parameter may only be used when <literal>ANALYZE</literal> is also
      enabled.  It defaults to <literal>TRUE</literal>.
-->
実際のスタートアップ時間とノードで費やされた時間が追加表示されます。
一部のシステムでは、システムクロックを何度も読み取るオーバーヘッドのため問い合わせがかなり低速になる可能性があります。
このため、実際の時間ではなく実際の行数のみが必要であるのであれば、このパラメータは<literal>FALSE</literal>に設定する方が有益でしょう。
文全体の実行時間は、このオプションによってノードレベルの時間計測が無効であった場合であっても、常に計測されます。
このパラメータは<literal>ANALYZE</literal>パラメータも有効である場合にのみ使用することができます。
デフォルトは<literal>TRUE</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FORMAT</literal></term>
    <listitem>
     <para>
<!--
      Specify the output format, which can be TEXT, XML, JSON, or YAML.
      Non-text output contains the same information as the text output
      format, but is easier for programs to parse.  This parameter defaults to
      <literal>TEXT</literal>.
-->
出力形式を指定します。
TEXT、XML、JSON、YAMLを指定可能です。
TEXT以外の出力にはTEXT出力と同じ情報が含まれていますが、プログラムによる解析がより容易になります。
このパラメータのデフォルトは<literal>TEXT</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">boolean</replaceable></term>
    <listitem>
     <para>
<!--
      Specifies whether the selected option should be turned on or off.
      You can write <literal>TRUE</literal>, <literal>ON</>, or
      <literal>1</literal> to enable the option, and <literal>FALSE</literal>,
      <literal>OFF</>, or <literal>0</literal> to disable it.  The
      <replaceable class="parameter">boolean</replaceable> value can also
      be omitted, in which case <literal>TRUE</literal> is assumed.
-->
選択したオプションを有効とするか無効とするかを指定します。
オプションを有効にするためには<literal>TRUE</literal>、<literal>ON</>、<literal>1</literal>のいずれかを書きます。
無効にするには<literal>FALSE</literal>、<literal>OFF</>、 <literal>0</literal>のいずれかを書きます。
<replaceable class="parameter">boolean</replaceable>値は省略可能です。
省略時は<literal>TRUE</literal>とみなされます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">statement</replaceable></term>
    <listitem>
     <para>
<!--
      Any <command>SELECT</>, <command>INSERT</>, <command>UPDATE</>,
      <command>DELETE</>, <command>VALUES</>, <command>EXECUTE</>,
      <command>DECLARE</>, <command>CREATE TABLE AS</>, or
      <command>CREATE MATERIALIZED VIEW AS</> statement, whose execution
      plan you wish to see.
-->
実行計画の表示対象となる、<command>SELECT</>、<command>INSERT</>、<command>UPDATE</>、<command>DELETE</>、<command>VALUES</>、<command>EXECUTE</>、<command>DECLARE</>、<command>CREATE TABLE AS</command>、<command>CREATE MATERIALIZED VIEW AS</>のいずれかの文です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Outputs</title>
-->
  <title>出力</title>

   <para>
<!--
    The command's result is a textual description of the plan selected
    for the <replaceable class="parameter">statement</replaceable>,
    optionally annotated with execution statistics.
    <xref linkend="using-explain"> describes the information provided.
-->
コマンドの結果は、<replaceable class="parameter">statement</replaceable>に対して選択された計画をテキストで説明します。
オプションで、実行時の統計情報で注釈が付けられます。
<xref linkend="using-explain">では出力される情報について説明します。
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   In order to allow the <productname>PostgreSQL</productname> query
   planner to make reasonably informed decisions when optimizing
   queries, the <link
   linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>
   data should be up-to-date for all tables used in the query.  Normally
   the <link linkend="autovacuum">autovacuum daemon</link> will take care
   of that automatically.  But if a table has recently had substantial
   changes in its contents, you might need to do a manual
   <xref linkend="sql-analyze"> rather than wait for autovacuum to catch up
   with the changes.
-->
<productname>PostgreSQL</productname>問い合わせプランナが十分な情報を使って問合せを最適化できるようにするには、問い合わせ内で使用されるすべてのテーブルに関する<link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>のデータを最新状態にしなければなりません。
通常<link linkend="autovacuum">自動バキュームデーモン</link>により自動的に処理されます。
しかし最近その内容が大きく変更されたテーブルでは、自動バキュームがその変更に追いつくまで待つのではなく、手作業による<xref linkend="sql-analyze">を実行する必要があるかもしれません。
  </para>

  <para>
<!--
   In order to measure the run-time cost of each node in the execution
   plan, the current implementation of <command>EXPLAIN
   ANALYZE</command> adds profiling overhead to query execution.
   As a result, running <command>EXPLAIN ANALYZE</command>
   on a query can sometimes take significantly longer than executing
   the query normally. The amount of overhead depends on the nature of
   the query, as well as the platform being used.  The worst case occurs
   for plan nodes that in themselves require very little time per
   execution, and on machines that have relatively slow operating
   system calls for obtaining the time of day.
-->
実行計画内の各ノードの実行時コストを測定するために、現在の<command>EXPLAIN ANALYZE</command>実装は、問い合わせ実行に対し、情報収集のためのオーバーヘッドを加えます。
この結果、ある問い合わせについての<command>EXPLAIN ANALYZE</command>実行が、普通に問い合わせを実行した場合より非常に時間がかかることがあります。
このオーバーヘッドの量は問い合わせの性質と使用するプラットフォームに依存します。
実行の間非常に短い時間を必要とする計画ノードに関して、時刻を得るためのシステムコールの操作が相対的に低速なプラットフォーム上で最悪な場合が発生します。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To show the plan for a simple query on a table with a single
   <type>integer</type> column and 10000 rows:
-->
<type>integer</type>列を1つ持ち、10000行が存在するテーブルに対して、単純な問い合わせを行った場合の問い合わせ計画を表示します。

<programlisting>
EXPLAIN SELECT * FROM foo;

                       QUERY PLAN
---------------------------------------------------------
 Seq Scan on foo  (cost=0.00..155.00 rows=10000 width=4)
(1 row)
</programlisting>
  </para>

  <para>
<!--
  Here is the same query, with JSON output formatting:
-->
以下は同じ問い合わせをJSON出力形式で出力したものです。
<programlisting>
EXPLAIN (FORMAT JSON) SELECT * FROM foo;
           QUERY PLAN
--------------------------------
 [                             +
   {                           +
     "Plan": {                 +
       "Node Type": "Seq Scan",+
       "Relation Name": "foo", +
       "Alias": "foo",         +
       "Startup Cost": 0.00,   +
       "Total Cost": 155.00,   +
       "Plan Rows": 10000,     +
       "Plan Width": 4         +
     }                         +
   }                           +
 ]
(1 row)
</programlisting>
  </para>

  <para>
<!--
   If there is an index and we use a query with an indexable
   <literal>WHERE</literal> condition, <command>EXPLAIN</command>
   might show a different plan:
-->
インデックスが存在し、問い合わせの<literal>WHERE</literal>条件でインデックスを利用できる場合、<command>EXPLAIN</command>は異なる計画を表示する可能性があります。

<programlisting>
EXPLAIN SELECT * FROM foo WHERE i = 4;

                         QUERY PLAN
--------------------------------------------------------------
 Index Scan using fi on foo  (cost=0.00..5.98 rows=1 width=4)
   Index Cond: (i = 4)
(2 rows)
</programlisting>
  </para>

  <para>
<!--
  Here is the same query, but in YAML format:
-->
以下は同じ問い合わせをYAML形式で表したものです。
<programlisting>
EXPLAIN (FORMAT YAML) SELECT * FROM foo WHERE i='4';
          QUERY PLAN
-------------------------------
 - Plan:                      +
     Node Type: "Index Scan"  +
     Scan Direction: "Forward"+
     Index Name: "fi"         +
     Relation Name: "foo"     +
     Alias: "foo"             +
     Startup Cost: 0.00       +
     Total Cost: 5.98         +
     Plan Rows: 1             +
     Plan Width: 4            +
     Index Cond: "(i = 4)"    
(1 row)
</programlisting>

<!--
    XML format is left as an exercise for the reader.
-->
読者への演習としてXML形式については記載しません。
  </para>
  <para>
<!--
   Here is the same plan with cost estimates suppressed:
-->
以下は同じ計画ですが、コスト推定値を出力しません。

<programlisting>
EXPLAIN (COSTS FALSE) SELECT * FROM foo WHERE i = 4;

        QUERY PLAN
----------------------------
 Index Scan using fi on foo
   Index Cond: (i = 4)
(2 rows)
</programlisting>
  </para>

  <para>
<!--
   Here is an example of a query plan for a query using an aggregate
   function:
-->
次に、集約関数を使用した問い合わせに対する問い合わせ計画の例を示します。

<programlisting>
EXPLAIN SELECT sum(i) FROM foo WHERE i &lt; 10;

                             QUERY PLAN
---------------------------------------------------------------------
 Aggregate  (cost=23.93..23.93 rows=1 width=4)
   -&gt;  Index Scan using fi on foo  (cost=0.00..23.92 rows=6 width=4)
         Index Cond: (i &lt; 10)
(3 rows)
</programlisting>
  </para>

  <para>
<!--
   Here is an example of using <command>EXPLAIN EXECUTE</command> to
   display the execution plan for a prepared query:
-->
以下は、<command>EXPLAIN EXECUTE</command>によってプリペアド文に対する実行計画を表示する例です。

<programlisting>
PREPARE query(int, int) AS SELECT sum(bar) FROM test
    WHERE id &gt; $1 AND id &lt; $2
    GROUP BY foo;

EXPLAIN ANALYZE EXECUTE query(100, 200);

                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=9.54..9.54 rows=1 width=8) (actual time=0.156..0.161 rows=11 loops=1)
   Group Key: foo
   -&gt;  Index Scan using test_pkey on test  (cost=0.29..9.29 rows=50 width=8) (actual time=0.039..0.091 rows=99 loops=1)
         Index Cond: ((id &gt; $1) AND (id &lt; $2))
 Planning time: 0.197 ms
 Execution time: 0.225 ms
(6 rows)
</programlisting>
  </para>

  <para>
<!--
   Of course, the specific numbers shown here depend on the actual
   contents of the tables involved.  Also note that the numbers, and
   even the selected query strategy, might vary between
   <productname>PostgreSQL</productname> releases due to planner
   improvements. In addition, the <command>ANALYZE</command> command
   uses random sampling to estimate data statistics; therefore, it is
   possible for cost estimates to change after a fresh run of
   <command>ANALYZE</command>, even if the actual distribution of data
   in the table has not changed.
-->
もちろん、ここで示した具体的な数値は対象とするテーブルの実際の中身によって変わります。
また、この数値や選択された問い合わせ戦略は、プランナの改良のため、<productname>PostgreSQL</productname>のリリース間で異なる可能性がありますので注意してください。
さらに、<command>ANALYZE</command>コマンドは、データの統計情報を推定する際にランダムなサンプリングを行うため、実際のテーブル内の分布が変わっていなくても、新たに<command>ANALYZE</command>を実行すると推定コストが変わることがあります。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   There is no <command>EXPLAIN</command> statement defined in the SQL standard.
-->
標準SQLでは<command>EXPLAIN</command>文は定義されていません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-analyze"></member>
  </simplelist>
 </refsect1>
</refentry>
