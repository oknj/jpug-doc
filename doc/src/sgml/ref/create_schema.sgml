<!--
doc/src/sgml/ref/create_schema.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATESCHEMA">
 <indexterm zone="sql-createschema">
  <primary>CREATE SCHEMA</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE SCHEMA</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SCHEMA</refname>
<!--
  <refpurpose>define a new schema</refpurpose>
-->
  <refpurpose>新しいスキーマを定義する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE SCHEMA <replaceable class="parameter">schema_name</replaceable> [ AUTHORIZATION <replaceable class="parameter">user_name</replaceable> ] [ <replaceable class="parameter">schema_element</replaceable> [ ... ] ]
CREATE SCHEMA AUTHORIZATION <replaceable class="parameter">user_name</replaceable> [ <replaceable class="parameter">schema_element</replaceable> [ ... ] ]
CREATE SCHEMA IF NOT EXISTS <replaceable class="parameter">schema_name</replaceable> [ AUTHORIZATION <replaceable class="parameter">user_name</replaceable> ]
CREATE SCHEMA IF NOT EXISTS AUTHORIZATION <replaceable class="parameter">user_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>CREATE SCHEMA</command> enters a new schema
   into the current database.
   The schema name must be distinct from the name of any existing schema
   in the current database.
-->
<command>CREATE SCHEMA</command>を実行すると、現在のデータベースに新しいスキーマが登録されます。
スキーマ名は、現在のデータベースにある既存のスキーマとは異なる名前にする必要があります。
  </para>

  <para>
<!--
   A schema is essentially a namespace:
   it contains named objects (tables, data types, functions, and operators)
   whose names can duplicate those of other objects existing in other
   schemas.  Named objects are accessed either by <quote>qualifying</>
   their names with the schema name as a prefix, or by setting a search
   path that includes the desired schema(s).  A <literal>CREATE</> command
   specifying an unqualified object name creates the object
   in the current schema (the one at the front of the search path,
   which can be determined with the function <function>current_schema</function>).
-->
スキーマは、本質的には名前空間です。
スキーマには、名前付きオブジェクト（テーブル、データ型、関数、および演算子）が含まれます。
これらのオブジェクトの名前は、他のスキーマに存在する他のオブジェクトの名前と重複しても構いません。
名前付きオブジェクトには、スキーマ名を接頭辞としてオブジェクト名を<quote>修飾</>するか、必要なスキーマを含んだ検索パスを設定することによってアクセスできます。
修飾なしのオブジェクト名を指定した<literal>CREATE</>コマンドは、そのオブジェクトの現在のスキーマ（<function>current_schema</function>関数で決定される検索パスの先頭部分）で作成されます。
  </para>

  <para>
<!--
   Optionally, <command>CREATE SCHEMA</command> can include subcommands
   to create objects within the new schema.  The subcommands are treated
   essentially the same as separate commands issued after creating the
   schema, except that if the <literal>AUTHORIZATION</> clause is used,
   all the created objects will be owned by that user.
-->
<command>CREATE SCHEMA</command>には、オプションとして、新しいスキーマ内でオブジェクトを作成するためのサブコマンドを付加することができます。
サブコマンドは、本質的にはスキーマ作成後に発行される別コマンドと同じように扱われます。
ただし、<literal>AUTHORIZATION</>句を使用した場合、作成された全てのオブジェクトの所有者が指定したユーザになるという点で異なっています。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">schema_name</replaceable></term>
      <listitem>
       <para>
<!--
        The name of a schema to be created.  If this is omitted, the
        <replaceable class="parameter">user_name</replaceable>
        is used as the schema name.  The name cannot
        begin with <literal>pg_</literal>, as such names
        are reserved for system schemas.
-->
作成するスキーマの名前です。
省略された場合、<replaceable class="parameter">user_name</replaceable>がスキーマ名として使用されます。
スキーマ名を<literal>pg_</literal>から始めることはできません。
このような名前はシステムスキーマ用に予約されているためです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">user_name</replaceable></term>
      <listitem>
       <para>
<!--
        The role name of the user who will own the new schema.  If omitted,
        defaults to the user executing the command.  To create a schema
        owned by another role, you must be a direct or indirect member of
        that role, or be a superuser.
-->
新しいスキーマを所有するユーザのロール名です。
省略された場合、デフォルトでは、コマンドを実行したユーザになります。
他のロールを所有者とするスキーマを作成するためには、そのロールの直接的または間接的なメンバであるか、スーパーユーザでなければなりません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">schema_element</replaceable></term>
      <listitem>
       <para>
<!--
        An SQL statement defining an object to be created within the
        schema. Currently, only <command>CREATE
        TABLE</>, <command>CREATE VIEW</>, <command>CREATE
        INDEX</>, <command>CREATE SEQUENCE</>, <command>CREATE
        TRIGGER</> and <command>GRANT</> are accepted as clauses
        within <command>CREATE SCHEMA</>. Other kinds of objects may
        be created in separate commands after the schema is created.
-->
そのスキーマ内で作成されるオブジェクトを定義するSQL文です。
現在、<command>CREATE SCHEMA</>内では、<command>CREATE TABLE</>、<command>CREATE VIEW</>、<command>CREATE INDEX</>、<command>CREATE SEQUENCE</>、<command>CREATE TRIGGER</>、および<command>GRANT</>のみが句として使用可能です。
他の種類のオブジェクトは、スキーマ作成後に個別のコマンドを使えば作成できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>IF NOT EXISTS</literal></term>
      <listitem>
       <para>
<!--
        Do nothing (except issuing a notice) if a schema with the same name
        already exists.  <replaceable class="parameter">schema_element</>
        subcommands cannot be included when this option is used.
-->
同じ名前のスキーマがすでに存在する場合に（注意を発生する以外）何も行いません。
このオプションを使用する場合には<replaceable class="parameter">schema_element</>副コマンドを含めることはできません。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
   <title>注釈</title>

  <para>
<!--
   To create a schema, the invoking user must have the
   <literal>CREATE</> privilege for the current database.
   (Of course, superusers bypass this check.)
-->
スキーマを作成するには、実行するユーザが現在のデータベースにおける<literal>CREATE</>権限を持っている必要があります。
（もちろん、スーパーユーザにはこの制限はありません）。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Create a schema:
-->
スキーマを作成します。
<programlisting>
CREATE SCHEMA myschema;
</programlisting>
  </para>

  <para>
<!--
   Create a schema for user <literal>joe</>; the schema will also be
   named <literal>joe</>:
-->
<literal>joe</>ユーザ用にスキーマを作成します。
このスキーマの名前は<literal>joe</>になります。
<programlisting>
CREATE SCHEMA AUTHORIZATION joe;
</programlisting>
  </para>

  <para>
<!--
   Create a schema named <literal>test</> that will be owned by user
   <literal>joe</>, unless there already is a schema named <literal>test</>.
   (It does not matter whether <literal>joe</> owns the pre-existing schema.)
-->
<literal>test</>という名前のスキーマがすでに存在していなければ、<literal>joe</>ユーザによって所有される<literal>test</>という名前のスキーマを作成します。
（<literal>joe</>が既存のスキーマの所有者であるかどうかは関係ありません。）
<programlisting>
CREATE SCHEMA IF NOT EXISTS test AUTHORIZATION joe;
</programlisting>
  </para>

  <para>
<!--
   Create a schema and create a table and view within it:
-->
スキーマを作成し、その中にテーブルとビューを作成します。
<programlisting>
CREATE SCHEMA hollywood
    CREATE TABLE films (title text, release date, awards text[])
    CREATE VIEW winners AS
        SELECT title, release FROM films WHERE awards IS NOT NULL;
</programlisting>
<!--
   Notice that the individual subcommands do not end with semicolons.
-->
個々のサブコマンドがセミコロンで終わっていないことに注意してください。
  </para>

  <para>
<!--
   The following is an equivalent way of accomplishing the same result:
-->
以下は、上述のコマンドと等価であり、同じ結果をもたらします。
<programlisting>
CREATE SCHEMA hollywood;
CREATE TABLE hollywood.films (title text, release date, awards text[]);
CREATE VIEW hollywood.winners AS
    SELECT title, release FROM hollywood.films WHERE awards IS NOT NULL;
</programlisting></para>

 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   The SQL standard allows a <literal>DEFAULT CHARACTER SET</> clause
   in <command>CREATE SCHEMA</command>, as well as more subcommand
   types than are presently accepted by
   <productname>PostgreSQL</productname>.
-->
標準SQLでは、<command>CREATE SCHEMA</command>で<literal>DEFAULT CHARACTER SET</>句を使用できます。
また、現在<productname>PostgreSQL</productname>で使用できるよりも多くのサブコマンドを使用できます。
  </para>

  <para>
<!--
   The SQL standard specifies that the subcommands in <command>CREATE
   SCHEMA</command> can appear in any order.  The present
   <productname>PostgreSQL</productname> implementation does not
   handle all cases of forward references in subcommands; it might
   sometimes be necessary to reorder the subcommands in order to avoid
   forward references.
-->
標準SQLでは、<command>CREATE SCHEMA</command>のサブコマンドを任意の順序で記述できます。
現在の<productname>PostgreSQL</productname>の実装では、サブコマンドにおいて下方参照ができない場合があります。
そのため、下方参照を避ける目的で、サブコマンドの順序を並べ替える必要が生じる可能性もあります。
  </para>

  <para>
<!--
   According to the SQL standard, the owner of a schema always owns
   all objects within it.  <productname>PostgreSQL</productname>
   allows schemas to contain objects owned by users other than the
   schema owner.  This can happen only if the schema owner grants the
   <literal>CREATE</> privilege on his schema to someone else, or a
   superuser chooses to create objects in it.
-->
標準SQLでは、スキーマの所有者は、常にそのスキーマ内の全てのオブジェクトを所有します。
<productname>PostgreSQL</productname>では、スキーマ所有者以外のユーザが所有するオブジェクトを、スキーマに含めることができます。  
このような状態は、スキーマ所有者が、そのスキーマでの<literal>CREATE</>権限を他のユーザに与えた場合やスーパーユーザがその中にオブジェクトを作成した場合にのみ発生します。
  </para>

  <para>
<!--
   The <literal>IF NOT EXISTS</literal> option is a
   <productname>PostgreSQL</productname> extension.
-->
<literal>IF NOT EXISTS</literal>オプションは<productname>PostgreSQL</productname>の拡張です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterschema"></member>
   <member><xref linkend="sql-dropschema"></member>
 </simplelist>
 </refsect1>

</refentry>
