<!-- doc/src/sgml/information_schema.sgml -->

<chapter id="information-schema">
<!--
 <title>The Information Schema</title>
-->
 <title>情報スキーマ</title>

 <indexterm zone="information-schema">
<!--
  <primary>information schema</primary>
-->
  <primary>情報スキーマ</primary>
 </indexterm>

 <para>
<!--
  The information schema consists of a set of views that contain
  information about the objects defined in the current database.  The
  information schema is defined in the SQL standard and can therefore
  be expected to be portable and remain stable &mdash; unlike the system
  catalogs, which are specific to
  <productname>PostgreSQL</productname> and are modeled after
  implementation concerns.  The information schema views do not,
  however, contain information about
  <productname>PostgreSQL</productname>-specific features; to inquire
  about those you need to query the system catalogs or other
  <productname>PostgreSQL</productname>-specific views.
-->
情報スキーマは、現在のデータベースで定義されたオブジェクトについての情報を持つビューの集合から構成されます。
情報スキーマは標準SQLで定義されています。
したがって、<productname>PostgreSQL</productname>に特化し、実装上の事項にならって作成されるシステムカタログとは異なり、移植性があり、安定性を保持できるものと期待できます。
しかし、情報スキーマのビューには、<productname>PostgreSQL</productname>固有の機能についての情報が含まれていません。
これに問い合わせを行うためには、システムカタログもしくは<productname>PostgreSQL</productname>固有のビューに問い合わせを行う必要があります。
 </para>

 <note>
  <para>
<!--
   When querying the database for constraint information, it is possible
   for a standard-compliant query that expects to return one row to
   return several.  This is because the SQL standard requires constraint
   names to be unique within a schema, but
   <productname>PostgreSQL</productname> does not enforce this
   restriction.  <productname>PostgreSQL</productname>
   automatically-generated constraint names avoid duplicates in the
   same schema, but users can specify such duplicate names.
-->
制約情報についてデータベースに問い合わせるとき、一行を返すことが想定される標準に準拠したクエリが数行の結果を返す場合があります。
これは、制約名がスキーマ内で一意になることをSQL標準が要求しているのに対して、<productname>PostgreSQL</productname>はこの制約を強制しないためです。
<productname>PostgreSQL</productname>は自動生成される制約の名前がスキーマ内で重複することを防ぎますが、ユーザは重複する名前を指定できます。
  </para>

  <para>
<!--
   This problem can appear when querying information schema views such
   as <literal>check_constraint_routine_usage</>,
   <literal>check_constraints</>, <literal>domain_constraints</>, and
   <literal>referential_constraints</>.  Some other views have similar
   issues but contain the table name to help distinguish duplicate
   rows, e.g., <literal>constraint_column_usage</>,
   <literal>constraint_table_usage</>, <literal>table_constraints</>.
-->
この問題は、<literal>check_constraint_routine_usage</>や<literal>check_constraints</>、<literal>domain_constraints</>、<literal>referential_constraints</>といった情報スキーマビューを検索するときに表面化することがあります。
いくつかの他のビューにも同様の問題がありますが、重複行を識別する助けになるテーブル名を含んでいます。例えば<literal>constraint_column_usage</>や<literal>constraint_table_usage</>、<literal>table_constraints</>などです。
  </para>
 </note>


 <sect1 id="infoschema-schema">
<!--
  <title>The Schema</title>
-->
  <title>スキーマ</title>

  <para>
<!--
   The information schema itself is a schema named
   <literal>information_schema</literal>.  This schema automatically
   exists in all databases.  The owner of this schema is the initial
   database user in the cluster, and that user naturally has all the
   privileges on this schema, including the ability to drop it (but
   the space savings achieved by that are minuscule).
-->
情報スキーマ自身は、<literal>information_schema</literal>という名前のスキーマです。
このスキーマは自動的にすべてのデータベース内に存在します。
このスキーマの所有者は、クラスタ内の最初のデータベースユーザであり、当然このユーザは、スキーマの削除を含むスキーマについてのすべての権限を持ちます
（しかし、削除したとしても節約できる領域はわずかです）。
  </para>

  <para>
<!--
   By default, the information schema is not in the schema search
   path, so you need to access all objects in it through qualified
   names.  Since the names of some of the objects in the information
   schema are generic names that might occur in user applications, you
   should be careful if you want to put the information schema in the
   path.
-->
デフォルトでは、情報スキーマはスキーマの検索パスには含まれません。
ですので、修飾した名前で情報スキーマ内のすべてのオブジェクトにアクセスする必要があります。
情報スキーマ内の一部のオブジェクトの名前はユーザアプリケーションでも使用されるような一般的な名前であるため、情報スキーマをパスに追加する場合は注意しなければなりません。
  </para>
 </sect1>

 <sect1 id="infoschema-datatypes">
<!--
  <title>Data Types</title>
-->
  <title>データ型</title>

  <para>
<!--
   The columns of the information schema views use special data types
   that are defined in the information schema.  These are defined as
   simple domains over ordinary built-in types.  You should not use
   these types for work outside the information schema, but your
   applications must be prepared for them if they select from the
   information schema.
-->
情報スキーマのビューの列では、情報スキーマ内で定義された特殊なデータ型を使用します。
これらは、通常の組み込み型の上位にあたる単純なドメインとして定義されます。
情報スキーマ外部で操作する時にはこれらの型を使用してはなりません。
しかし、情報スキーマを検索するようなアプリケーションではこれらの型への用意をしておかなければなりません。
  </para>

  <para>
<!--
   These types are:
-->
これらの型を以下に記します。

   <variablelist>
    <varlistentry>
     <term><type>cardinal_number</type></term>
     <listitem>
      <para>
<!--
       A nonnegative integer.
-->
非負の整数です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>character_data</type></term>
     <listitem>
      <para>
<!--
       A character string (without specific maximum length).
-->
（最大文字長の指定がない）文字列です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>sql_identifier</type></term>
     <listitem>
      <para>
<!--
       A character string.  This type is used for SQL identifiers, the
       type <type>character_data</type> is used for any other kind of
       text data.
-->
文字列です。
この型はSQL識別子用に使用され、<type>character_data</type>はその他の任意のテキストデータに使用されます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>time_stamp</type></term>
     <listitem>
      <para>
<!--
       A domain over the type <type>timestamp with time zone</type>
-->
<type>timestamp with time zone</type>型の上位ドメインです。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>yes_or_no</type></term>
     <listitem>
      <para>
<!--
       A character string domain that contains
       either <literal>YES</literal> or <literal>NO</literal>.  This
       is used to represent Boolean (true/false) data in the
       information schema.  (The information schema was invented
       before the type <type>boolean</type> was added to the SQL
       standard, so this convention is necessary to keep the
       information schema backward compatible.)
-->
<literal>YES</literal>か<literal>NO</literal>のいずれかを持つ文字列ドメインです。
情報スキーマ内で論理(真/偽)データを表すために使用されます。
（情報スキーマは<type>boolean</type>型が標準SQLに追加される前に考案されました。
このため情報スキーマの後方互換性を維持するために、この記法が必要です。）
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

<!--
   Every column in the information schema has one of these five types.
-->
情報スキーマ内の列はすべてこれら5つの型のいずれかを取ります。
  </para>
 </sect1>

 <sect1 id="infoschema-information-schema-catalog-name">
  <title><literal>information_schema_catalog_name</literal></title>

  <para>
<!--
   <literal>information_schema_catalog_name</literal> is a table that
   always contains one row and one column containing the name of the
   current database (current catalog, in SQL terminology).
-->
<literal>information_schema_catalog_name</literal>は、常に現在のデータベース名（SQL用語では現在のカタログ）を持つ1行1列からなるテーブルです。
  </para>

  <table>
<!--
   <title><literal>information_schema_catalog_name</literal> Columns</title>
-->
   <title><literal>information_schema_catalog_name</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>catalog_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains this information schema</entry>
-->
      <entry>この情報スキーマを持つデータベースの名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-administrable-role-authorizations">
  <title><literal>administrable_role_authorizations</literal></title>

  <para>
<!--
   The view <literal>administrable_role_authorizations</literal>
   identifies all roles that the current user has the admin option
   for.
-->
<literal>administrable_role_authorizations</literal>ビューは、現在のユーザがアドミンオプションを持つすべてのロールを識別します。
  </para>

  <table>
<!--
   <title><literal>administrable_role_authorizations</literal> Columns</title>
-->
   <title><literal>administrable_role_authorizations</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the role to which this role membership was granted (can
       be the current user, or a different role in case of nested role
       memberships)
-->
このロールのメンバ資格を付与したロールの名前です。
（現在のユーザかもしれませんし、入れ子状のロールメンバ資格の場合は異なるロールかもしれません。）
      </entry>
     </row>

     <row>
      <entry><literal>role_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of a role</entry>
-->
      <entry>ロール名です。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Always <literal>YES</literal></entry>
-->
      <entry>常に<literal>YES</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-applicable-roles">
  <title><literal>applicable_roles</literal></title>

  <para>
<!--
   The view <literal>applicable_roles</literal> identifies all roles
   whose privileges the current user can use.  This means there is
   some chain of role grants from the current user to the role in
   question.  The current user itself is also an applicable role.  The
   set of applicable roles is generally used for permission checking.
   <indexterm><primary>applicable role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>applicable</secondary></indexterm>
-->
<literal>applicable_roles</literal>ビューは、その権限を現在のユーザが使用することができるすべてのロールを識別します。
これは、現在のユーザから問題のロールに付与されたロールの連鎖が存在することを意味します。
現在のユーザ自身もまた適用可能なロールです。
適用可能なロール群は通常権限の検査に使用されます。
<indexterm><primary>適用可能なロール</primary></indexterm>
<indexterm><primary>ロール</primary><secondary>適用可能</secondary></indexterm>
  </para>

  <table>
<!--
   <title><literal>applicable_roles</literal> Columns</title>
-->
   <title><literal>applicable_roles</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the role to which this role membership was granted (can
       be the current user, or a different role in case of nested role
       memberships)
-->
このロールのメンバ資格を付与したロールの名前です。
（現在のユーザかもしれませんし、入れ子状のロールメンバ資格の場合は異なるロールかもしれません。）
      </entry>
     </row>

     <row>
      <entry><literal>role_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of a role</entry>
-->
      <entry>ロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the grantee has the admin option on
       the role, <literal>NO</literal> if not
-->
付与者がこのロールにアドミンオプションを持つ場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-attributes">
  <title><literal>attributes</literal></title>

  <para>
<!--
   The view <literal>attributes</literal> contains information about
   the attributes of composite data types defined in the database.
   (Note that the view does not give information about table columns,
   which are sometimes called attributes in PostgreSQL contexts.)
   Only those attributes are shown that the current user has access to (by way
   of being the owner of or having some privilege on the type).
-->
<literal>attributes</literal>ビューには、データベース内で定義された複合データ型の属性に関する情報が含まれます。
（このビューが、PostgreSQLコンテキスト内でよく呼び出される属性である、テーブル列に関する情報を持たない点に注意してください。）
現在のユーザが（所有者であるかまたは複合データ型に対する権限を持っていて）アクセスする権限を持つ属性のみが表示されます。
  </para>

  <table>
<!--
   <title><literal>attributes</literal> Columns</title>
-->
   <title><literal>attributes</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the data type (always the current database)</entry>
-->
      <entry>データ型を含むデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the data type</entry>
-->
      <entry>データ型を含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the data type</entry>
-->
      <entry>データ型の名前です。</entry>
     </row>

     <row>
      <entry><literal>attribute_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the attribute</entry>
-->
      <entry>属性の名前です。</entry>
     </row>

     <row>
      <entry><literal>ordinal_position</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Ordinal position of the attribute within the data type (count starts at 1)</entry>
-->
      <entry>データ型の属性の序数位置です（1から始まります）。</entry>
     </row>

     <row>
      <entry><literal>attribute_default</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Default expression of the attribute</entry>
-->
      <entry>属性のデフォルト式です。</entry>
     </row>

     <row>
      <entry><literal>is_nullable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the attribute is possibly nullable,
       <literal>NO</literal> if it is known not nullable.
-->
属性がNULLを持つことができる場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Data type of the attribute, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>attribute_udt_name</literal> and
       associated columns).
-->
属性のデータ型が組み込み型の場合、そのデータ型です。
何らかの配列の場合、<literal>ARRAY</literal>です。
（この場合、<literal>element_types</literal>ビューを参照してください。）
さもなくば<literal>USER-DEFINED</literal>です。
（この場合、型は<literal>attribute_udt_name</literal>と関連する列により識別されます。）
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a character or bit
       string type, the declared maximum length; null for all other
       data types or if no maximum length was declared.
-->
<literal>data_type</literal>が文字列またはビット列を識別する場合、その宣言された最大長です。
他のデータ型または最大長が宣言されていない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a character type,
       the maximum possible length in octets (bytes) of a datum; null
       for all other data types.  The maximum octet length depends on
       the declared character maximum length (see above) and the
       server encoding.
-->
<literal>data_type</literal>が文字列を識別する場合、オクテット（バイト）単位で表したデータの最大長です。
他のデータ型ではNULLです。
最大オクテット長は宣言された文字最大長(上述)とサーバ符号化方式に依存します。
      </entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
<entry><productname>PostgreSQL</>では利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
<entry><productname>PostgreSQL</>では利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
<entry><productname>PostgreSQL</>では利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database containing the collation of the attribute
       (always the current database), null if default or the data type
       of the attribute is not collatable
-->
属性の照合を含むデータベース(常に現在のデータベース)の名前で、デフォルトであるか属性のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema containing the collation of the attribute,
       null if default or the data type of the attribute is not
       collatable
-->
属性の照合を含むスキーマの名前で、デフォルトであるか属性のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the collation of the attribute, null if default or the
       data type of the attribute is not collatable
-->
属性の照合の名前で、デフォルトであるか属性のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a numeric type, this
       column contains the (declared or implicit) precision of the
       type for this attribute.  The precision indicates the number of
       significant digits.  It can be expressed in decimal (base 10)
       or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
<literal>data_type</literal>が数値型を識別する場合、この列は属性の型の（宣言された、あるいは暗黙的な）精度です。
この精度は有効桁を意味します。
<literal>numeric_precision_radix</literal>列の指定に従って、(10を基とした)10進数、または(2を基とした)2進数表記で表現されます。
他のデータ型ではこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a numeric type, this
       column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
-->
<literal>data_type</literal>が数値型を識別する場合、この列は、<literal>numeric_precision</literal>および<literal>numeric_scale</literal>で表現される値の基が何かを識別します。
この値は2または10です。
他のデータ型ではこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies an exact numeric
       type, this column contains the (declared or implicit) scale of
       the type for this attribute.  The scale indicates the number of
       significant digits to the right of the decimal point.  It can
       be expressed in decimal (base 10) or binary (base 2) terms, as
       specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
<literal>data_type</literal>が数値型を識別する場合、この列は、属性の型の（宣言された、あるいは暗黙的な）位取りが含まれます。
位取りは小数点以下の有効桁数を意味します。
<literal>numeric_precision_radix</literal>列の指定に従って、(10を基とした)10進数、または(2を基とした)2進数表記で表現されます。
他のデータ型ではこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       attribute, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
-->
<literal>data_type</literal>が日付、時刻、タイムスタンプ、または間隔型を示す場合、この列は（宣言されたか暗黙的な）この属性に対する分数秒精度を包含します。
つまり、秒の値の小数点に続く保存された10進桁数です。
他の全ての型に対してこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this attribute, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
-->
もし<literal>data_type</literal>が時間間隔型を示す場合、この列はこの属性の時間間隔値がどのフィールドを含むかの仕様を含みます。例えば、<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>などです。
もしフィールド制約が指定されていない(時間間隔が全てのフィールドを受け付ける)場合や、他の全てのデータ型の場合はこのフィールドはNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type attributes)
-->
<productname>PostgreSQL</>で利用できない機能に適用されるものです。(インターバル型の属性の秒未満の精度については<literal>datetime_precision</literal>を参照してください)
      </entry>
     </row>

     <row>
      <entry><literal>attribute_udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the attribute data type is defined in
       (always the current database)
-->
属性のデータ型が定義されたデータベースの名前です。
（常に現在のデータベースです。）
      </entry>
     </row>

     <row>
      <entry><literal>attribute_udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the attribute data type is defined in
-->
属性のデータ型が定義されたスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>attribute_udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the attribute data type
-->
属性のデータ型の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>では配列の次数は無制限だからです。</entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the column, unique
       among the data type descriptors pertaining to the table.  This
       is mainly useful for joining with other instances of such
       identifiers.  (The specific format of the identifier is not
       defined and not guaranteed to remain the same in future
       versions.)
-->
列のデータ型記述子の、テーブルに属するデータ型記述子内で一意な識別子です。
この識別子のインスタンスを結合する時に、主に有用です。
（識別子の書式仕様は定義されておらず、今後のバージョンで同一性を維持する保証もありません。）
      </entry>
     </row>

     <row>
      <entry><literal>is_derived_reference_attribute</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   See also under <xref linkend="infoschema-columns">, a similarly
   structured view, for further information on some of the columns.
-->
後述の<xref linkend="infoschema-columns">も参照してください。
ビューの構造が似ていますし、一部の列では更なる情報も記載されています。
  </para>
 </sect1>

 <sect1 id="infoschema-character-sets">
  <title><literal>character_sets</literal></title>

  <para>
<!--
   The view <literal>character_sets</literal> identifies the character
   sets available in the current database.  Since PostgreSQL does not
   support multiple character sets within one database, this view only
   shows one, which is the database encoding.
-->
この<literal>character_sets</literal>ビューは、現在のデータベースで利用可能な文字セットを識別します。PostgreSQLはひとつのデータベース内で複数の文字セットをサポートしないので、このビューは常にデータベースエンコーディングの一行だけを表示します。
  </para>

  <para>
<!--
   Take note of how the following terms are used in the SQL standard:
-->
以下の用語のSQL標準での使われ方に注意してください。
   <variablelist>
    <varlistentry>
<!--
     <term>character repertoire</term>
-->
     <term>文字集合</term>
     <listitem>
      <para>
<!--
       An abstract collection of characters, for
       example <literal>UNICODE</literal>, <literal>UCS</literal>, or
       <literal>LATIN1</literal>.  Not exposed as an SQL object, but
       visible in this view.
-->
例えば<literal>UNICODE</literal>や<literal>UCS</literal>、<literal>LATIN1</literal>といった抽象的な文字集合です。SQLオブジェクトとしては出てきませんが、このビューで参照できます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
<!--
     <term>character encoding form</term>
-->
     <term>文字符号化形式</term>
     <listitem>
      <para>
<!--
       An encoding of some character repertoire.  Most older character
       repertoires only use one encoding form, and so there are no
       separate names for them (e.g., <literal>LATIN1</literal> is an
       encoding form applicable to the <literal>LATIN1</literal>
       repertoire).  But for example Unicode has the encoding forms
       <literal>UTF8</literal>, <literal>UTF16</literal>, etc. (not
       all supported by PostgreSQL).  Encoding forms are not exposed
       as an SQL object, but are visible in this view.
-->
文字集合の符号化方式です。ほとんどの古い文字集合はひとつの符号化形式を使うため、それらについては分離した名称はありません(たとえば、<literal>LATIN1</literal>は<literal>LATIN1</literal>集合に適用可能な符号化形式です)。しかし例えばUnicodeには<literal>UTF8</literal>、<literal>UTF16</literal>などの符号化形式があります（PostgreSQLでは一部だけサポートしています）。符号化形式はSQLオブジェクトとして表にでませんが、このビューで参照できます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
<!--
     <term>character set</term>
-->
     <term>文字セット</term>
     <listitem>
      <para>
<!--
       A named SQL object that identifies a character repertoire, a
       character encoding, and a default collation.  A predefined
       character set would typically have the same name as an encoding
       form, but users could define other names.  For example, the
       character set <literal>UTF8</literal> would typically identify
       the character repertoire <literal>UCS</literal>, encoding
       form <literal>UTF8</literal>, and some default collation.
-->
文字集合、文字符号化方式とデフォルトの照合を識別する順序名前つきのSQLオブジェクトです。定義済みの文字セットは、一般的に符号化形式と同じ名前を持ちますが、ユーザは他の名前を定義できます。
例えば、文字セット<literal>UTF8</literal>は一般的に文字集合<literal>UCS</literal>、符号化形式<literal>UTF8</literal>と何らかのデフォルト照合を識別します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

<!--
   You can think of an <quote>encoding</quote> in PostgreSQL either as
   a character set or a character encoding form.  They will have the
   same name, and there can only be one in one database.
-->
PostgreSQLにおける<quote>encoding</quote>は、文字セットまたは文字符号化形式のいずれかと考えられます。これらは同じ名前を持ち一つのデータベースでは一つだけ存在できます。
  </para>

  <table>
<!--
   <title><literal>character_sets</literal> Columns</title>
-->
   <title><literal>character_sets</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character sets are currently not implemented as schema objects, so this column is null.</entry>
-->
      <entry>文字セットはスキーマオブジェクトとして実装されていないので、この列はNULLです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character sets are currently not implemented as schema objects, so this column is null.</entry>
-->
      <entry>文字セットはスキーマオブジェクトとして実装されていないので、この列はNULLです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the character set, currently implemented as showing the name of the database encoding</entry>
-->
      <entry>文字セットの名前で、現在はデータベースエンコーディングを表示するように実装されています。</entry>
     </row>

     <row>
      <entry><literal>character_repertoire</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character repertoire, showing <literal>UCS</literal> if the encoding is <literal>UTF8</literal>, else just the encoding name</entry>
-->
      <entry>文字集合で、エンコーディングが<literal>UTF8</literal>の場合は<literal>UCS</literal>を、それ以外の場合は単にエンコーディング名を表示します。</entry>
     </row>

     <row>
      <entry><literal>form_of_use</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character encoding form, same as the database encoding</entry>
-->
      <entry>文字符号化形式で, データベースエンコーディングと同じです。</entry>
     </row>

     <row>
      <entry><literal>default_collate_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the default collation (always the current database, if any collation is identified)</entry>
-->
      <entry>デフォルト照合を含むデータベース(いずれかの照合が識別された場合は常に現在のデータベース)の名前です。</entry>
     </row>

     <row>
      <entry><literal>default_collate_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the default collation</entry>
-->
      <entry>デフォルト照合を含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>default_collate_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       Name of the default collation.  The default collation is
       identified as the collation that matches
       the <literal>COLLATE</literal> and <literal>CTYPE</literal>
       settings of the current database.  If there is no such
       collation, then this column and the associated schema and
       catalog columns are null.
-->
デフォルト照合の名前です。デフォルト照合は、現在のデータベースの<literal>COLLATE</literal>と<literal>CTYPE</literal>設定に一致する照合として識別されます。そのような照合が存在しない場合は、この列や対応するスキーマやカタログの列はNULLです。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-check-constraint-routine-usage">
  <title><literal>check_constraint_routine_usage</literal></title>

  <para>
<!--
   The view <literal>check_constraint_routine_usage</literal>
   identifies routines (functions and procedures) that are used by a
   check constraint.  Only those routines are shown that are owned by
   a currently enabled role.
-->
<literal>check_constraint_routine_usage</literal>は検査制約で使用される処理（関数およびプロシージャ）を識別します。
現在有効なロールが所有する処理のみが表示されます。
  </para>

  <table>
<!--
   <title><literal>check_constraint_routine_usage</literal> Columns</title>
-->
   <title><literal>check_constraint_routine_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the constraint (always the current database)</entry>
-->
      <entry>制約が含まれるデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the constraint</entry>
-->
      <entry>制約が含まれるスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数が含まれるデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数が含まれるスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  See <xref
       linkend="infoschema-routines"> for more information.
-->
関数の<quote>仕様名称</quote>です。
詳細は<xref linkend="infoschema-routines">を参照してください。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-check-constraints">
  <title><literal>check_constraints</literal></title>

  <para>
<!--
   The view <literal>check_constraints</literal> contains all check
   constraints, either defined on a table or on a domain, that are
   owned by a currently enabled role.  (The owner of the table or
   domain is the owner of the constraint.)
-->
<literal>check_constraints</literal>ビューには、現在有効なロールが所有している、テーブル上もしくはドメイン上のどちらかにある、全ての検査制約が含まれます
（テーブルもしくはドメインの所有者がこの制約の所有者です）。
  </para>

  <table>
<!--
   <title><literal>check_constraints</literal> Columns</title>
-->
   <title><literal>check_constraints</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the constraint (always the current database)</entry>
-->
      <entry>この制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the constraint</entry>
-->
      <entry>この制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>

     <row>
      <entry><literal>check_clause</literal></entry>
      <entry><literal>character_data</literal></entry>
<!--
      <entry>The check expression of the check constraint</entry>
-->
      <entry>この検査制約の検査式です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-collations">
  <title><literal>collations</literal></title>

  <para>
<!--
   The view <literal>collations</literal> contains the collations
   available in the current database.
-->
<literal>collations</literal>ビューは現在のデータベースで利用可能な照合を含みます
  </para>

  <table>
<!--
   <title><literal>collations</literal> Columns</title>
-->
   <title><literal>collations</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the collation (always the current database)</entry>
-->
      <entry>照合を含むデータベース(常に現在のデータベース)の名前です。</entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the collation</entry>
-->
      <entry>照合を含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the default collation</entry>
-->
      <entry>デフォルト照合の名前です。</entry>
     </row>

     <row>
      <entry><literal>pad_attribute</literal></entry>
      <entry><literal>character_data</literal></entry>
      <entry>
<!--
       Always <literal>NO PAD</literal> (The alternative <literal>PAD
       SPACE</literal> is not supported by PostgreSQL.)
-->
常に<literal>NO PAD</literal>です。(もう一方の<literal>PAD SPACE</literal>はPostgreSQLではサポートされていません。)
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-collation-character-set-applicab"> <!-- max 44 characters -->
  <title><literal>collation_character_set_applicability</literal></title>

  <para>
<!--
   The view <literal>collation_character_set_applicability</literal>
   identifies which character set the available collations are
   applicable to.  In PostgreSQL, there is only one character set per
   database (see explanation
   in <xref linkend="infoschema-character-sets">), so this view does
   not provide much useful information.
-->
<literal>collation_character_set_applicability</literal>ビューは、利用可能な照合がどの文字セットに適用可能かを識別します。PostgreSQLでは、データベースごとに一つの文字セットしか存在しない(<xref linkend="infoschema-character-sets">の説明を参照してください)ので、このビューは有益な情報を提供しません。
  </para>

  <table>
<!--
   <title><literal>collation_character_set_applicability</literal> Columns</title>
-->
   <title><literal>collation_character_set_applicability</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the collation (always the current database)</entry>
-->
      <entry>照合を含むデータベース(常に現在のデータベース)の名前です。</entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the collation</entry>
-->
      <entry>照合を含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the default collation</entry>
-->
      <entry>デフォルト照合の名前です。</entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character sets are currently not implemented as schema objects, so this column is null</entry>
-->
      <entry>文字セットはスキーマオブジェクトとして実装されていないので、この列はNULLです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Character sets are currently not implemented as schema objects, so this column is null</entry>
-->
      <entry>文字セットはスキーマオブジェクトとして実装されていないので、この列はNULLです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the character set</entry>
-->
      <entry>文字セットの名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-domain-usage">
  <title><literal>column_domain_usage</literal></title>

  <para>
<!--
   The view <literal>column_domain_usage</literal> identifies all
   columns (of a table or a view) that make use of some domain defined
   in the current database and owned by a currently enabled role.
-->
<literal>column_domain_usage</literal>ビューは、現在のデータベース内で定義され、現在有効なロールが所有するあるドメインを使用する（テーブルもしくはビューの）全ての列を識別します。
  </para>

  <table>
<!--
   <title><literal>column_domain_usage</literal> Columns</title>
-->
   <title><literal>column_domain_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>domain_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the domain (always the current database)</entry>
-->
      <entry>ドメインを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>domain_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the domain</entry>
-->
      <entry>ドメインを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain</entry>
-->
      <entry>ドメインの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the table (always the current database)</entry>
-->
      <entry>テーブルを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the table</entry>
-->
      <entry>テーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>列の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-options">
  <title><literal>column_options</literal></title>

  <para>
<!--
   The view <literal>column_options</literal> contains all the
   options defined for foreign table columns in the current database.  Only
   those foreign table columns are shown that the current user has access to
   (by way of being the owner or having some privilege).
-->
<literal>column_options</literal>ビューは、現在のデータベースにある外部テーブルの列に定義された全てのオプションを含みます。
現在のユーザが(所有者であるかまたは権限を持っていて)アクセスする権限を持つ外部テーブル列のみが表示されます。
  </para>

  <table>
<!--
   <title><literal>column_options</literal> Columns</title>
-->
   <title><literal>column_options</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the foreign table (always the current database)</entry>
-->
      <entry>外部テーブルが含まれるデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the foreign table</entry>
-->
      <entry>外部テーブルを含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign table</entry>
-->
      <entry>外部テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>列の名前です。</entry>
     </row>

     <row>
      <entry><literal>option_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of an option</entry>
-->
      <entry>オプションの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Value of the option</entry>
-->
      <entry>オプションの値です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-privileges">
  <title><literal>column_privileges</literal></title>

  <para>
<!--
   The view <literal>column_privileges</literal> identifies all
   privileges granted on columns to a currently enabled role or by a
   currently enabled role.  There is one row for each combination of
   column, grantor, and grantee.
-->
<literal>column_privileges</literal>ビューは、現在有効なロールに対し、または現在有効なロールによって、列に与えられた権限を全て識別します。
列と許可を与えた者、許可を受けた者の組み合わせごとに1行があります。
  </para>

  <para>
<!--
   If a privilege has been granted on an entire table, it will show up in
   this view as a grant for each column, but only for the
   privilege types where column granularity is possible:
   <literal>SELECT</literal>, <literal>INSERT</literal>,
   <literal>UPDATE</literal>, <literal>REFERENCES</literal>.
-->
権限がテーブル全体に付与されていた場合、このビューでは各列に権限が付与された場合と同じように表示されます。
しかし、<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>、<literal>REFERENCES</literal>といった列単位で設定可能な種類の権限のみを対象範囲とします。
  </para>

  <table>
<!--
   <title><literal>column_privileges</literal> Columns</title>
-->
   <title><literal>column_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限を与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table that contains the column (always the current database)</entry>
-->
      <entry>その列を含むテーブルを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table that contains the column</entry>
-->
      <entry>その列を含むテーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table that contains the column</entry>
-->
      <entry>その列を含むテーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>列の名前です。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>, or
       <literal>REFERENCES</literal>
-->
権限の種類です。
<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>、もしくは<literal>REFERENCES</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>この権限を付与可能な場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-udt-usage">
  <title><literal>column_udt_usage</literal></title>

  <para>
<!--
   The view <literal>column_udt_usage</literal> identifies all columns
   that use data types owned by a currently enabled role.  Note that in
   <productname>PostgreSQL</productname>, built-in data types behave
   like user-defined types, so they are included here as well.  See
   also <xref linkend="infoschema-columns"> for details.
-->
<literal>column_udt_usage</literal>ビューは、現在有効なロールが所有するデータ型を使用する全ての列を識別します。
<productname>PostgreSQL</productname>では、組み込みデータ型がユーザ定義型同様に振舞いますので、組み込みデータ型も同様にここに含まれます。
詳細は<xref linkend="infoschema-columns">も参照してください。
  </para>

  <table>
<!--
   <title><literal>column_udt_usage</literal> Columns</title>
-->
   <title><literal>column_udt_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the column data type (the underlying
       type of the domain, if applicable) is defined in (always the
       current database)
-->
列データ型（もし適用されていたら背後にあるドメインの型）を定義したデータベースの名前です（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the column data type (the underlying
       type of the domain, if applicable) is defined in
-->
列データ型（もし適用されていたら背後にあるドメインの型）を定義したスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the column data type (the underlying type of the
       domain, if applicable)
-->
列データ型（もし適用されていたら背後にあるドメインの型）の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the table (always the current database)</entry>
-->
      <entry>
そのテーブルを持つデータベースの名前です（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the table</entry>
-->
      <entry>そのテーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>列の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-columns">
  <title><literal>columns</literal></title>

  <para>
<!--
   The view <literal>columns</literal> contains information about all
   table columns (or view columns) in the database.  System columns
   (<literal>oid</>, etc.) are not included.  Only those columns are
   shown that the current user has access to (by way of being the
   owner or having some privilege).
-->
<literal>columns</literal>ビューには、データベース内の全てのテーブル列（もしくはビューの列）についての情報が含まれます。
システム列（<literal>oid</>など）は含まれません。
現在のユーザが（所有者である、権限を持っているなどの方法で）アクセスできる列のみが示されます。
  </para>

  <table>
<!--
   <title><literal>columns</literal> Columns</title>
-->
   <title><literal>columns</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the table (always the current database)</entry>
-->
      <entry>
そのテーブルを持つデータベースの名前です（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the table</entry>
-->
      <entry>
そのテーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>
テーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>
列の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>ordinal_position</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Ordinal position of the column within the table (count starts at 1)</entry>
-->
      <entry>
テーブル内の列の位置（1から始まる序数）です。
      </entry>
     </row>

     <row>
      <entry><literal>column_default</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Default expression of the column</entry>
-->
      <entry>列のデフォルト式です。</entry>
     </row>

     <row>
      <entry><literal>is_nullable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the column is possibly nullable,
       <literal>NO</literal> if it is known not nullable.  A not-null
       constraint is one way a column can be known not nullable, but
       there can be others.
-->
列がNULLを持つことができる場合は<literal>YES</literal>、NULLを持つことができなければ<literal>NO</literal>です。
非NULL制約は、列にNULLを持たせないようにする方法の1つですが、その他にも存在します。
      </entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Data type of the column, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).  If the column is based on a domain, this column
       refers to the type underlying the domain (and the domain is
       identified in <literal>domain_name</literal> and associated
       columns).
-->
組み込み型の場合、列のデータ型、配列の場合、<literal>ARRAY</literal>（この場合は<literal>element_types</literal>ビューを参照してください）、さもなくば、<literal>USER-DEFINED</literal>です（この場合、型は<literal>udt_name</literal>と関連する列で識別されます）。
列がドメインに基づくものであれば、その列はドメインの背後にある型を示します
（そして、ドメインは<literal>domain_name</literal>と関連する列によって識別されます）。
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a character or bit
       string type, the declared maximum length; null for all other
       data types or if no maximum length was declared.
-->
<literal>data_type</literal>が、文字、もしくはビット文字列型を表す場合、宣言された最大の長さです。その他の型や最大長が宣言されていない場合はNULLになります。
      </entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a character type,
       the maximum possible length in octets (bytes) of a datum; null
       for all other data types.  The maximum octet length depends on
       the declared character maximum length (see above) and the
       server encoding.
-->
<literal>data_type</literal>が文字型を示す場合、オクテット（バイト）単位の最大長です
他の全てのデータ型ではNULLです。
最大オクテット長は宣言された文字最大長(上述)とサーバ符号化方式に依存します。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a numeric type, this
       column contains the (declared or implicit) precision of the
       type for this column.  The precision indicates the number of
       significant digits.  It can be expressed in decimal (base 10)
       or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
<literal>data_type</literal>が数値型を示す場合、ここには、その列の型の（宣言された、もしくは暗黙的な）精度が含まれます。
この精度は有意な桁数を示します。
<literal>numeric_precision_radix</literal>列の指定に従い、10進数（10を底）、もしくは2進数（2を底）で表現されます。
この列は、他の全ての型ではNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a numeric type, this
       column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
-->
<literal>data_type</literal>が数値型を示す場合、この列は、<literal>numeric_precision</literal>と<literal>numeric_scale</literal>の表現の底とする数を示します。
2もしくは10を取ります。
この列は、他の全ての型ではNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies an exact numeric
       type, this column contains the (declared or implicit) scale of
       the type for this column.  The scale indicates the number of
       significant digits to the right of the decimal point.  It can
       be expressed in decimal (base 10) or binary (base 2) terms, as
       specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
<literal>data_type</literal>が高精度数値型を示す場合、
ここには、その列の型の（宣言された、あるいは暗黙的な）位取りが含まれます。
位取りとは、小数点より右側の有意な桁数です。
<literal>numeric_precision_radix</literal>列の指定に従い、10進数（10を底）、もしくは2進数（2を底）で表現されます。
この列は、他の全ての型ではNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       column, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
-->
<literal>data_type</literal>が日付、時刻、タイムスタンプ、間隔型を示す場合、この列の型の秒以下の（宣言された、または暗黙的な）精度、つまり、秒値の小数点以降に保持する10進桁数、です。
他のすべての型の場合ではこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this column, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
-->
もし<literal>data_type</literal>が時間間隔型を示す場合、この列はこの属性の時間間隔値がどのフィールドを含むかの仕様を含みます。例えば、<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>などです。
もしフィールド制約が指定されていない(時間間隔が全てのフィールドを受け付ける)場合や、他の全てのデータ型の場合はこのフィールドはNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type columns)
-->
<productname>PostgreSQL</>で利用できない機能に適用されるものです。(時間間隔型の属性の秒未満の精度については<literal>datetime_precision</literal>を参照してください)
      </entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database containing the collation of the column
       (always the current database), null if default or the data type
       of the column is not collatable
-->
列の照合を含むデータベース(常に現在のデータベース)の名前で、デフォルトであるか属性のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema containing the collation of the column, null
       if default or the data type of the column is not collatable
-->
属性の照合を含むスキーマの名前で、デフォルトであるか属性のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the collation of the column, null if default or the
       data type of the column is not collatable
-->
列の照合の名前で、デフォルトであるか列のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>domain_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       If the column has a domain type, the name of the database that
       the domain is defined in (always the current database), else
       null.
-->
列がドメイン型の場合、そのドメインを定義したデータベースの名前です
（常に現在のデータベースです）。
さもなくば、NULLです。
      </entry>
     </row>

     <row>
      <entry><literal>domain_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       If the column has a domain type, the name of the schema that
       the domain is defined in, else null.
-->
列がドメイン型の場合、そのドメインを定義したスキーマの名前です。
さもなくば、NULLです。
      </entry>
     </row>

     <row>
      <entry><literal>domain_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>If the column has a domain type, the name of the domain, else null.</entry>
-->
      <entry>
列がドメイン型の場合、そのドメインの名前です。
さもなくば、NULLです。
      </entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the column data type (the underlying
       type of the domain, if applicable) is defined in (always the
       current database)
-->
列データ型（もし適切ならば背後にあるドメインの型）を定義したデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the column data type (the underlying
       type of the domain, if applicable) is defined in
-->
列データ型（もし適切ならば背後にあるドメインの型）を定義したスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the column data type (the underlying type of the
       domain, if applicable)
-->
列データ型（もし適切ならば背後にあるドメインの型）の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では配列の最大次数は常に無制限だからです。
      </entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the column, unique
       among the data type descriptors pertaining to the table.  This
       is mainly useful for joining with other instances of such
       identifiers.  (The specific format of the identifier is not
       defined and not guaranteed to remain the same in future
       versions.)
-->
列のデータ型記述子の、テーブルに属するデータ型記述子内で一意な識別子です。
この識別子のインスタンスを結合する時に、主に有用です
（識別子の書式仕様は定義されておらず、今後のバージョンで同一性を維持する保証もありません）。
      </entry>
     </row>

     <row>
      <entry><literal>is_self_referencing</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_identity</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_generation</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_start</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_increment</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_maximum</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_minimum</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>identity_cycle</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_generated</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>generation_expression</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_updatable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the column is updatable,
       <literal>NO</literal> if not (Columns in base tables are always
       updatable, columns in views not necessarily)
-->
列が更新可能な場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
（ベーステーブルの列は常に更新可能です。ビューの列では不要です。）
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Since data types can be defined in a variety of ways in SQL, and
   <productname>PostgreSQL</productname> contains additional ways to
   define data types, their representation in the information schema
   can be somewhat difficult.  The column <literal>data_type</literal>
   is supposed to identify the underlying built-in type of the column.
   In <productname>PostgreSQL</productname>, this means that the type
   is defined in the system catalog schema
   <literal>pg_catalog</literal>.  This column might be useful if the
   application can handle the well-known built-in types specially (for
   example, format the numeric types differently or use the data in
   the precision columns).  The columns <literal>udt_name</literal>,
   <literal>udt_schema</literal>, and <literal>udt_catalog</literal>
   always identify the underlying data type of the column, even if the
   column is based on a domain.  (Since
   <productname>PostgreSQL</productname> treats built-in types like
   user-defined types, built-in types appear here as well.  This is an
   extension of the SQL standard.)  These columns should be used if an
   application wants to process data differently according to the
   type, because in that case it wouldn't matter if the column is
   really based on a domain.  If the column is based on a domain, the
   identity of the domain is stored in the columns
   <literal>domain_name</literal>, <literal>domain_schema</literal>,
   and <literal>domain_catalog</literal>.  If you want to pair up
   columns with their associated data types and treat domains as
   separate types, you could write <literal>coalesce(domain_name,
   udt_name)</literal>, etc.
-->
データ型は、複数の方法でSQLにより定義でき、さらに<productname>PostgreSQL</productname>にはデータ型定義に別の方法も追加されていますので、情報スキーマにおけるデータ型表現は多少難しくなっています。
<literal>data_type</literal>列は、列の背後にある組み込み型を識別できるようになっていなければなりません。
<productname>PostgreSQL</productname>では、型が<literal>pg_catalog</literal>システムカタログスキーマで定義されていることを意味します。
よく知られた組み込み型を特別に扱うことができるアプリケーション（例えば、数値型を異なる書式にする、精度列内のデータを使用する）の場合、この列が有用な場合があります。
<literal>udt_name</literal>、<literal>udt_schema</literal>、<literal>udt_catalog</literal>列は、たとえドメインに基づいた列であっても、常に列の背後にあるデータ型を識別します
（<productname>PostgreSQL</productname>は、組み込み型をユーザ定義型と同様に扱いますので、ここには組み込み型も現れます。これは標準SQLからの拡張です）。
アプリケーションが型に従って異なる処理を行う場合、これらの列を使用しなければなりません。
このような場合、本当はドメインに基づいている列なのかどうかが関係ないからです。
列がドメインに基づく場合、ドメインの識別子は<literal>domain_name</literal>、<literal>domain_schema</literal>、<literal>domain_catalog</literal>列に保持されます。
関連するデータ型と列の組み合わせを作りたい場合や、ドメインを別の型として扱いたい場合は、<literal>coalesce(domain_name, udt_name)</literal>などとすることができます。
  </para>
 </sect1>

 <sect1 id="infoschema-constraint-column-usage">
  <title><literal>constraint_column_usage</literal></title>

  <para>
<!--
   The view <literal>constraint_column_usage</literal> identifies all
   columns in the current database that are used by some constraint.
   Only those columns are shown that are contained in a table owned by
   a currently enabled role.  For a check constraint, this view
   identifies the columns that are used in the check expression.  For
   a foreign key constraint, this view identifies the columns that the
   foreign key references.  For a unique or primary key constraint,
   this view identifies the constrained columns.
-->
<literal>constraint_column_usage</literal>ビューは、現在のデータベースで制約を使用する全ての列を識別します。
現在有効なロールが所有するテーブル内の列のみが表示されます。
検査制約では、このビューは検査式で使用される列を識別します。
外部キー制約では、このビューは外部キーを参照する列を識別します。
一意性制約もしくはプライマリキー制約では、このビューは制約される列を識別します。
  </para>

  <table>
<!--
   <title><literal>constraint_column_usage</literal> Columns</title>
-->
   <title><literal>constraint_column_usage</literal> 列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that contains the
       column that is used by some constraint (always the current
       database)
-->
ある制約で使用される列を持つデータベースの名前です
（データベースの名前です）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the table that contains the
       column that is used by some constraint
-->
ある制約で使用される列を持つテーブルを含むスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the table that contains the column that is used by some
       constraint
-->
ある制約で使用される列を持つテーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the column that is used by some constraint
-->
ある制約で使用される列の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the constraint (always the current database)</entry>
-->
      <entry>制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the constraint</entry>
-->
      <entry>制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-constraint-table-usage">
  <title><literal>constraint_table_usage</literal></title>

  <para>
<!--
   The view <literal>constraint_table_usage</literal> identifies all
   tables in the current database that are used by some constraint and
   are owned by a currently enabled role.  (This is different from the
   view <literal>table_constraints</literal>, which identifies all
   table constraints along with the table they are defined on.)  For a
   foreign key constraint, this view identifies the table that the
   foreign key references.  For a unique or primary key constraint,
   this view simply identifies the table the constraint belongs to.
   Check constraints and not-null constraints are not included in this
   view.
-->
<literal>constraint_table_usage</literal>ビューは、ある制約で使用され、かつ、現在有効なロールが所有する、現在のデータベース内の全てのテーブルを識別します
（これは、全てのテーブル制約とそれを定義したテーブルを識別する<literal>table_constraints</literal>とは異なります）。
外部キー制約では、このビューは外部キーが参照するテーブルを識別します。
一意性制約もしくはプライマリキー制約では、このビューは単に制約が属するテーブルを識別します。
検査制約と非NULL制約はこのビューには含まれません。
  </para>

  <table>
<!--
   <title><literal>constraint_table_usage</literal> Columns</title>
-->
   <title><literal>constraint_table_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that is used by
       some constraint (always the current database)
-->
ある制約で使用されるテーブルを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the table that is used by some
       constraint
-->
ある制約で使用されるテーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table that is used by some constraint</entry>
-->
      <entry>ある制約で使用されるテーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the constraint (always the current database)</entry>
-->
      <entry>制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the constraint</entry>
-->
      <entry>制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-data-type-privileges">
  <title><literal>data_type_privileges</literal></title>

  <para>
<!--
   The view <literal>data_type_privileges</literal> identifies all
   data type descriptors that the current user has access to, by way
   of being the owner of the described object or having some privilege
   for it.  A data type descriptor is generated whenever a data type
   is used in the definition of a table column, a domain, or a
   function (as parameter or return type) and stores some information
   about how the data type is used in that instance (for example, the
   declared maximum length, if applicable).  Each data type
   descriptor is assigned an arbitrary identifier that is unique
   among the data type descriptor identifiers assigned for one object
   (table, domain, function).  This view is probably not useful for
   applications, but it is used to define some other views in the
   information schema.
-->
<literal>data_type_privileges</literal>ビューは、記述子が示すオブジェクトの所有者である、何かしらの権限を持っているといった方法で現在のユーザがアクセスできる全てのデータ型記述子を識別します。
あるデータ型がテーブル列やドメイン、関数（パラメータとして、あるいは戻り値として）の定義内で使用されると、そのデータ型記述子は生成され、そして、データ型がそのインスタンスでどのように使用されるか（例えば、もし適切ならば、宣言された最大長）についての情報が格納されます。
各データ型記述子は、1つのオブジェクト（テーブル、ドメイン、関数）に割り当てられたデータ型記述子の中で一意となる任意の識別子が割り振られます。
このビューはおそらくアプリケーションではあまり使用されませんが、情報スキーマ内の他のビューを定義する際に使用されます。
  </para>

  <table>
<!--
   <title><literal>data_type_privileges</literal> Columns</title>
-->
   <title><literal>data_type_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the described object (always the current database)</entry>
-->
      <entry>記述子が示すオブジェクトを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the described object</entry>
-->
      <entry>記述子が示すオブジェクトを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>object_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the described object</entry>
-->
      <entry>記述子が示すオブジェクトの名前です。</entry>
     </row>

     <row>
      <entry><literal>object_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The type of the described object: one of
       <literal>TABLE</literal> (the data type descriptor pertains to
       a column of that table), <literal>DOMAIN</literal> (the data
       type descriptors pertains to that domain),
       <literal>ROUTINE</literal> (the data type descriptor pertains
       to a parameter or the return data type of that function).
-->
記述子が示すオブジェクトの種類です。
<literal>TABLE</literal>（データ型記述子がそのテーブルの列に属します）、<literal>DOMAIN</literal>（データ型記述子がそのドメインに属します）、<literal>ROUTINE</literal>（データ型記述子がその関数のパラメータあるいは戻り値データ型に属します）のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The identifier of the data type descriptor, which is unique
       among the data type descriptors for that same object.
-->
データ型記述子の識別子です。
これは同一オブジェクトに対するデータ型記述子の中で一意なものです。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domain-constraints">
  <title><literal>domain_constraints</literal></title>

  <para>
<!--
   The view <literal>domain_constraints</literal> contains all constraints
   belonging to domains defined in the current database.  Only those domains
   are shown that the current user has access to (by way of being the owner or
   having some privilege).
-->
<literal>domain_constraints</literal>ビューには、現在有効なロールが所有するドメインに属する全ての制約があります。
現在のユーザが（所有者である、権限を持っているなどの方法で）アクセスできるドメインのみが示されます。
  </para>

  <table>
<!--
   <title><literal>domain_constraints</literal> Columns</title>
-->
   <title><literal>domain_constraints</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the constraint (always the current database)</entry>
-->
      <entry>制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the constraint</entry>
-->
      <entry>制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the domain (always the current database)</entry>
-->
      <entry>ドメインを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>domain_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the domain</entry>
-->
      <entry>ドメインを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain</entry>
-->
      <entry>ドメインの名前です。</entry>
     </row>

     <row>
      <entry><literal>is_deferrable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the constraint is deferrable, <literal>NO</literal> if not</entry>
-->
      <entry>制約が遅延可能ならば<literal>YES</literal>。さもなくば<literal>NO</literal>。</entry>
     </row>

     <row>
      <entry><literal>initially_deferred</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the constraint is deferrable and initially deferred, <literal>NO</literal> if not</entry>
-->
      <entry>制約が遅延可能で初期状態が遅延であれば<literal>YES</literal>。さもなくば<literal>NO</literal>。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domain-udt-usage">
  <title><literal>domain_udt_usage</literal></title>

  <para>
<!--
   The view <literal>domain_udt_usage</literal> identifies all domains
   that are based on data types owned by a currently enabled role.
   Note that in <productname>PostgreSQL</productname>, built-in data
   types behave like user-defined types, so they are included here as
   well.
-->
<literal>domain_udt_usage</literal>ビューは、現在有効なロールが所有するデータ型に基づいたすべてのドメインを識別します。
<productname>PostgreSQL</productname>では組み込みデータ型はユーザ定義型と同様に振舞いますので、ここにも同様に現れることに注意してください。
  </para>

  <table>
<!--
   <title><literal>domain_udt_usage</literal> Columns</title>
-->
   <title><literal>domain_udt_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the domain data type is defined in (always the current database)</entry>
-->
      <entry>ドメインデータ型を定義したデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that the domain data type is defined in</entry>
-->
      <entry>ドメインデータ型を定義したスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain data type</entry>
-->
      <entry>ドメインデータ型の名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the domain (always the current database)</entry>
-->
      <entry>ドメインを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>domain_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the domain</entry>
-->
      <entry>ドメインを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain</entry>
-->
      <entry>ドメインの名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domains">
  <title><literal>domains</literal></title>

  <para>
<!--
   The view <literal>domains</literal> contains all domains defined in the
   current database.  Only those domains are shown that the current user has
   access to (by way of being the owner or having some privilege).
-->
<literal>domains</literal>ビューには、現在のデータベースで定義された全てのドメインが含まれます。
現在のユーザが（所有者である、権限を持っているなどの方法で）アクセスできるドメインのみが示されます。
  </para>

  <table>
<!--
   <title><literal>domains</literal> Columns</title>
-->
   <title><literal>domains</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>domain_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the domain (always the current database)</entry>
-->
      <entry>ドメインを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>domain_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the domain</entry>
-->
      <entry>ドメインを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>domain_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain</entry>
-->
      <entry>ドメインの名前です。</entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Data type of the domain, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
-->
組み込み型の場合は、ドメインのデータ型、何らかの配列の場合は<literal>ARRAY</literal>です
（後者の場合は<literal>element_types</literal>ビューを参照してください）。
さもなくば、<literal>USER-DEFINED</literal>です
（この場合、その型は<literal>udt_name</literal>と関連する列で識別されます）。
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If the domain has a character or bit string type, the declared
       maximum length; null for all other data types or if no maximum
       length was declared.
-->
ドメインが、文字もしくはビット文字列型の場合、宣言された最大長です。
他のデータ型、あるいは最大長の宣言がない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If the domain has a character type, the maximum possible length
       in octets (bytes) of a datum; null for all other data types.
       The maximum octet length depends on the declared character
       maximum length (see above) and the server encoding.
-->
ドメインが文字型の場合、1つのデータの可能最大長をオクテット（バイト）で示します
他のデータ型の場合はNULLです。
最大オクテット長は宣言された文字最大長(上述)とサーバ符号化方式に依存します。
      </entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database containing the collation of the domain
       (always the current database), null if default or the data type
       of the domain is not collatable
-->
ドメインの照合を含むデータベース(常に現在のデータベース)の名前で、デフォルトであるかドメインのデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema containing the collation of the domain, null
       if default or the data type of the domain is not collatable
-->
ドメインの照合を含むスキーマの名前で、デフォルトであるかドメインのデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the collation of the domain, null if default or the
       data type of the domain is not collatable
-->
ドメインの照合の名前で、デフォルトであるかドメインのデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If the domain has a numeric type, this column contains the
       (declared or implicit) precision of the type for this domain.
       The precision indicates the number of significant digits.  It
       can be expressed in decimal (base 10) or binary (base 2) terms,
       as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
ドメインが数値型の場合、この列は、そのドメインの型の（宣言された、もしくは暗黙的な）精度を持ちます。
この精度は有効桁数を示すものです。
<literal>numeric_precision_radix</literal> 列が示す通り、10進数（10を底）でも2進数（2を底）でも表現できます。
他の全てのデータ型では、この列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If the domain has a numeric type, this column indicates in
       which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
-->
ドメインが数値型の場合、この列は、<literal>numeric_precision</literal>と<literal>numeric_scale</literal>で表現されるその列の値の底数がどちらかかを示します。
2もしくは10の値となります。
他の全てのデータ型では、この列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If the domain has an exact numeric type, this column contains
       the (declared or implicit) scale of the type for this domain.
       The scale indicates the number of significant digits to the
       right of the decimal point.  It can be expressed in decimal
       (base 10) or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
-->
ドメインが高精度数値型の場合、この列は、そのドメインの型の（宣言された、もしくは暗黙的な）位取りを持ちます。
位取りは、小数点より右側の有効桁数を示すものです。
<literal>numeric_precision_radix</literal>列の指定に従い、10進数（10を底）、もしくは2進数（2を底）で表現されます。
他の全ての型ではこの列はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       domain, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
-->
<literal>data_type</literal>が日付、時刻、タイムスタンプ、間隔型を示す場合、この列はこのドメインの型で（宣言された、または暗黙的な）秒の端数の精度、つまり、秒値の小数点以下で保持される10進の桁数です。
他の全ての型の場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this domain, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
-->
もし<literal>data_type</literal>が時間間隔型を示す場合、この列はこのドメインの時間間隔値がどのフィールドを含むかの仕様を含みます。例えば、<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>などです。
もしフィールド制約が指定されていない(時間間隔が全てのフィールドを受け付ける)場合や、他の全てのデータ型の場合はこのフィールドはNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type domains)
-->
<productname>PostgreSQL</>で利用できない機能に適用されるものです。(時間間隔型のドメインの秒未満の精度については<literal>datetime_precision</literal>を参照してください)
      </entry>
     </row>

     <row>
      <entry><literal>domain_default</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Default expression of the domain</entry>
-->
      <entry>ドメインのデフォルト式です。</entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the domain data type is defined in (always the current database)</entry>
-->
      <entry>ドメインデータ型を定義したデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that the domain data type is defined in</entry>
-->
      <entry>ドメインデータ型を定義したスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the domain data type</entry>
-->
      <entry>ドメインデータ型の名前です。</entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。
<productname>PostgreSQL</>では配列の最大次数は常に無制限だからです。
</entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the domain, unique
       among the data type descriptors pertaining to the domain (which
       is trivial, because a domain only contains one data type
       descriptor).  This is mainly useful for joining with other
       instances of such identifiers.  (The specific format of the
       identifier is not defined and not guaranteed to remain the same
       in future versions.)
-->
そのドメインに属するデータ型記述子間で一意な、データ型記述子の識別子です
（ドメインには1つのデータ型記述子しかありませんのでこれは些細なものです）。
これは主に、こうした識別子の他のインスタンスを結合する時に有用です
（識別子の書式の仕様は定義されておらず、将来のバージョンでそのまま維持されるかどうかも保証されません）。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-element-types">
  <title><literal>element_types</literal></title>

  <para>
<!--
   The view <literal>element_types</literal> contains the data type
   descriptors of the elements of arrays.  When a table column, composite-type attribute,
   domain, function parameter, or function return value is defined to
   be of an array type, the respective information schema view only
   contains <literal>ARRAY</literal> in the column
   <literal>data_type</literal>.  To obtain information on the element
   type of the array, you can join the respective view with this view.
   For example, to show the columns of a table with data types and
   array element types, if applicable, you could do:
-->
<literal>element_types</literal>には、配列の要素のデータ型記述子が含まれます。
テーブル列、複合データ型属性、ドメイン、関数パラメータ、関数の戻り値が配列型であると宣言された場合、
情報スキーマの各ビューでは、<literal>data_type</literal>列に<literal>ARRAY</literal>だけが含まれます。
配列の要素の型についての情報を取り出すには、各ビューとこのビューを結合することで可能です。
例えば、テーブルの列のデータ型と、もし適切ならば、配列の要素型を表示するには、以下のように行います。
<programlisting>
SELECT c.column_name, c.data_type, e.data_type AS element_type
FROM information_schema.columns c LEFT JOIN information_schema.element_types e
     ON ((c.table_catalog, c.table_schema, c.table_name, 'TABLE', c.dtd_identifier)
       = (e.object_catalog, e.object_schema, e.object_name, e.object_type, e.collection_type_identifier))
WHERE c.table_schema = '...' AND c.table_name = '...'
ORDER BY c.ordinal_position;
</programlisting>
<!--
   This view only includes objects that the current user has access
   to, by way of being the owner or having some privilege.
-->
このビューは、所有者である、適切な権限を持っているといった方法で、現在のユーザがアクセスできるオブジェクトのみが含まれます。
  </para>

  <table>
<!--
   <title><literal>element_types</literal> Columns</title>
-->
   <title><literal>element_types</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the object that uses the
       array being described (always the current database)
-->
記述される配列を使用するオブジェクトを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the object that uses the array
       being described
-->
記述される配列を使用するオブジェクトを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>object_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the object that uses the array being described
-->
記述される配列を使用するオブジェクトの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>object_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The type of the object that uses the array being described: one
       of <literal>TABLE</literal> (the array is used by a column of
       that table), <literal>USER-DEFINED TYPE</literal> (the array is
       used by an attribute of that composite type),
       <literal>DOMAIN</literal> (the array is used by that domain),
       <literal>ROUTINE</literal> (the array is used by a parameter or
       the return data type of that function).
-->
記述される配列を使用するオブジェクトの種類です。
<literal>TABLE</literal>（その配列がテーブルの列によって使用される）、<literal>USER-DEFINED TYPE</literal>（その配列が複合データ型の属性によって使用される）、<literal>DOMAIN</literal>（その配列がドメインによって使用される）、<literal>ROUTINE</literal>（その配列が関数のパラメータ、もしくは戻り値の型によって使用される）のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>collection_type_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The identifier of the data type descriptor of the array being
       described.  Use this to join with the
       <literal>dtd_identifier</literal> columns of other information
       schema views.
-->
記述される配列のデータ型記述子の識別子です。他の情報スキーマビューの<literal>dtd_identifier</literal>列と結合するのに使用してください。
      </entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Data type of the array elements, if it is a built-in type, else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
-->
組み込み型の場合は配列要素のデータ型です。さもなくば、<literal>USER-DEFINED</literal>です
（この場合、型は<literal>udt_name</literal>と関連する列で識別されます）。
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database containing the collation of the element
       type (always the current database), null if default or the data
       type of the element is not collatable
-->
要素データ型の照合を含むデータベース(常に現在のデータベース)の名前で、デフォルトであるか要素のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema containing the collation of the element
       type, null if default or the data type of the element is not
       collatable
-->
要素データ型の照合を含むスキーマの名前で、デフォルトであるか要素のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the collation of the element type, null if default or
       the data type of the element is not collatable
-->
要素データ型の照合の名前で、デフォルトであるか要素のデータ型が照合可能でない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to array element data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
この情報は、<productname>PostgreSQL</>における配列要素のデータ型には当てはまらないからです。
      </entry>
     </row>

     <row>
      <entry><literal>domain_default</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Not yet implemented</entry>
-->
      <entry>未実装です。</entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the data type of the elements is
       defined in (always the current database)
-->
要素のデータ型を定義したデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the data type of the elements is
       defined in
-->
要素のデータ型を定義したスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the data type of the elements
-->
要素のデータ型の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では配列の最大次数は常に無制限だからです。
      </entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the element.  This
       is currently not useful.
-->
要素のデータ型記述子の識別子です。現在は用途はありません。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-enabled-roles">
  <title><literal>enabled_roles</literal></title>

  <para>
<!--
   The view <literal>enabled_roles</literal> identifies the currently
   <quote>enabled roles</quote>.  The enabled roles are recursively
   defined as the current user together with all roles that have been
   granted to the enabled roles with automatic inheritance.  In other
   words, these are all roles that the current user has direct or
   indirect, automatically inheriting membership in.
   <indexterm><primary>enabled role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>enabled</secondary></indexterm>
-->
<literal>enabled_roles</literal>ビューは、現在<quote>有効なロール</quote>を識別します。
有効なロールは、現在のユーザと自動継承によって有効なロールに付与されたすべてのロールとして再帰的に定義されます。
言い換えると、これは、現在のユーザが直接または間接的に属するメンバ資格の継承により自動的に持つすべてのロールです。
   <indexterm><primary>enabled role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>enabled</secondary></indexterm>
  </para>

  <para>
<!--
   For permission checking, the set of <quote>applicable roles</quote>
   is applied, which can be broader than the set of enabled roles.  So
   generally, it is better to use the view
   <literal>applicable_roles</literal> instead of this one; see also
   there.
-->
権限検査では、<quote>適用可能なロール</quote>群が適用されます。
これは、有効なロールよりも広範になる可能性があります。
したがって一般的にはこのビューよりも<literal>applicable_roles</literal>ビューを使用する方が良いでしょう。
このビューも参照してください。
  </para>

  <table>
<!--
   <title><literal>enabled_roles</literal> Columns</title>
-->
   <title><literal>enabled_roles</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>role_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of a role</entry>
-->
      <entry>ロールの名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-data-wrapper-options">
  <title><literal>foreign_data_wrapper_options</literal></title>

  <para>
<!--
   The view <literal>foreign_data_wrapper_options</literal> contains
   all the options defined for foreign-data wrappers in the current
   database.  Only those foreign-data wrappers are shown that the
   current user has access to (by way of being the owner or having
   some privilege).
-->
<literal>foreign_data_wrapper_options</literal>ビューには現在のデータベース内の外部データラッパー用に定義されたすべてのオプションが含まれます。
現在のユーザが（所有者または何らかの権限を持つことで）アクセス可能な外部データラッパーのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_data_wrapper_options</literal> Columns</title>
-->
   <title><literal>foreign_data_wrapper_options</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_data_wrapper_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign-data wrapper is defined in (always the current database)</entry>
-->
      <entry>外部データラッパーを定義したデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_data_wrapper_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign-data wrapper</entry>
-->
      <entry>外部データラッパーの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of an option</entry>
-->
      <entry>オプションの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Value of the option</entry>
-->
      <entry>オプションの値です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-data-wrappers">
  <title><literal>foreign_data_wrappers</literal></title>

  <para>
<!--
   The view <literal>foreign_data_wrappers</literal> contains all
   foreign-data wrappers defined in the current database.  Only those
   foreign-data wrappers are shown that the current user has access to
   (by way of being the owner or having some privilege).
-->
<literal>foreign_data_wrappers</literal>ビューには現在のデータベース内で定義された、すべての外部データラッパーが含まれます。
現在のユーザが（所有者である、または、何らかの権限を持つことにより）アクセス可能な外部データラッパーのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_data_wrappers</literal> Columns</title>
-->
   <title><literal>foreign_data_wrappers</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_data_wrapper_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the foreign-data
      wrapper (always the current database)</entry>
-->
      <entry>外部データラッパーを含むデータベース名です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_data_wrapper_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign-data wrapper</entry>
-->
      <entry>外部データラッパーの名前です。</entry>
     </row>

     <row>
      <entry><literal>authorization_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the owner of the foreign server</entry>
-->
      <entry>外部サーバの所有者の名前です。</entry>
     </row>

     <row>
      <entry><literal>library_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>File name of the library that implementing this foreign-data wrapper</entry>
-->
      <entry>この外部データラッパーを実装するライブラリの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_data_wrapper_language</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Language used to implement this foreign-data wrapper</entry>
-->
      <entry>この外部データラッパーを実装するのに使用される言語です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-server-options">
  <title><literal>foreign_server_options</literal></title>

  <para>
<!--
   The view <literal>foreign_server_options</literal> contains all the
   options defined for foreign servers in the current database.  Only
   those foreign servers are shown that the current user has access to
   (by way of being the owner or having some privilege).
-->
<literal>foreign_server_options</literal>ビューには、現在のデータベース内の外部サーバ用に定義されたすべてのオプションが含まれます。
現在のユーザが（所有者である、または何らかの権限を持つことにより）アクセス可能な外部サーバのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_server_options</literal> Columns</title>
-->
   <title><literal>foreign_server_options</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server is defined in (always the current database)</entry>
-->
      <entry>外部サーバを定義したデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server</entry>
-->
      <entry>外部サーバの名前</entry>
     </row>

     <row>
      <entry><literal>option_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of an option</entry>
-->
      <entry>オプションの名前</entry>
     </row>

     <row>
      <entry><literal>option_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Value of the option</entry>
-->
      <entry>オプションの値</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-servers">
  <title><literal>foreign_servers</literal></title>

  <para>
<!--
   The view <literal>foreign_servers</literal> contains all foreign
   servers defined in the current database.  Only those foreign
   servers are shown that the current user has access to (by way of
   being the owner or having some privilege).
-->
<literal>foreign_servers</literal>ビューには、現在のデータベース内で定義されたすべての外部サーバが含まれます。
現在のユーザが（所有者である、または何らかの権限を持つことにより）アクセス可能な外部サーバのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_servers</literal> Columns</title>
-->
   <title><literal>foreign_servers</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server is defined in (always the current database)</entry>
-->
      <entry>外部サーバを定義したデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server</entry>
-->
      <entry>外部サーバの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_data_wrapper_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the foreign-data
      wrapper used by the foreign server (always the current database)</entry>
-->
      <entry>外部サーバで使用される外部データラッパーを含むデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_data_wrapper_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign-data wrapper used by the foreign server</entry>
-->
      <entry>外部サーバにより使用される外部データラッパーの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Foreign server type information, if specified upon creation</entry>
-->
      <entry>作成時点で指定されている場合、その外部サーバの種類情報です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_version</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Foreign server version information, if specified upon creation</entry>
-->
      <entry>作成時点で指定されている場合、その外部サーバのバージョン情報です。</entry>
     </row>

     <row>
      <entry><literal>authorization_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the owner of the foreign server</entry>
-->
      <entry>外部サーバの所有者名です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-table-options">
  <title><literal>foreign_table_options</literal></title>

  <para>
<!--
   The view <literal>foreign_table_options</literal> contains all the
   options defined for foreign tables in the current database.  Only
   those foreign tables are shown that the current user has access to
   (by way of being the owner or having some privilege).
-->
<literal>foreign_table_options</literal>ビューは、現在のデータベースの外部テーブルに定義された全てのオプションを含みます。(所有者であるか何らかの権限を持っていて)現在のユーザがアクセスできる外部テーブルだけが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_table_options</literal> Columns</title>
-->
   <title><literal>foreign_table_options</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the foreign table (always the current database)</entry>
-->
      <entry>外部テーブルを含むデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the foreign table</entry>
-->
      <entry>外部テーブルを含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign table</entry>
-->
      <entry>外部テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server is defined in (always the current database)</entry>
-->
      <entry>外部サーバが定義されているデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server</entry>
-->
      <entry>外部サーバの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of an option</entry>
-->
      <entry>オプションの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Value of the option</entry>
-->
      <entry>オプションの値です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-tables">
  <title><literal>foreign_tables</literal></title>

  <para>
<!--
   The view <literal>foreign_tables</literal> contains all foreign
   tables defined in the current database.  Only those foreign
   tables are shown that the current user has access to (by way of
   being the owner or having some privilege).
-->
<literal>foreign_tables</literal>ビューは、現在のデータベースで定義されている全ての外部テーブルを含みます。(所有者であるか何らかの権限を持っていて)現在のユーザがアクセスできる外部テーブルだけが表示されます。
  </para>

  <table>
<!--
   <title><literal>foreign_tables</literal> Columns</title>
-->
   <title><literal>foreign_tables</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>foreign_table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign table is defined in (always the current database)</entry>
-->
      <entry>外部テーブルを含むデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the foreign table</entry>
-->
      <entry>外部テーブルを含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign table</entry>
-->
      <entry>外部テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server is defined in (always the current database)</entry>
-->
      <entry>外部サーバが定義されているデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server</entry>
-->
      <entry>外部サーバの名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-key-column-usage">
  <title><literal>key_column_usage</literal></title>

  <para>
<!--
   The view <literal>key_column_usage</literal> identifies all columns
   in the current database that are restricted by some unique, primary
   key, or foreign key constraint.  Check constraints are not included
   in this view.  Only those columns are shown that the current user
   has access to, by way of being the owner or having some privilege.
-->
<literal>key_column_usage</literal>ビューは、現在のデータベースにおいて、ある一意性制約、プライマリキー制約、外部キー制約によって制限を受けている全ての列を識別します。
検査制約はこのビューには含まれません。
現在のユーザが所有者である、または何らかの権限を持ち、アクセスできるテーブル内のこうした列のみがここに示されます。
  </para>

  <table>
<!--
   <title><literal>key_column_usage</literal> Columns</title>
-->
   <title><literal>key_column_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the constraint (always the current database)</entry>
-->
      <entry>制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the constraint</entry>
-->
      <entry>制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that contains the
       column that is restricted by this constraint (always the
       current database)
-->
この制約によって制限を受ける列を持つテーブルを持つデータベースの名前です。
（常に現在のデータベースです。）
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the table that contains the
       column that is restricted by this constraint
-->
この制約によって制限を受ける列を持つテーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the table that contains the column that is restricted
       by this constraint
-->
この制約によって制限を受ける列を持つテーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the column that is restricted by this constraint
-->
この制約によって制限を受ける列の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>ordinal_position</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Ordinal position of the column within the constraint key (count
       starts at 1)
-->
制約キー内の列の位置を（1から始まる）序数で表したものです。
      </entry>
     </row>

     <row>
      <entry><literal>position_in_unique_constraint</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       For a foreign-key constraint, ordinal position of the referenced
       column within its unique constraint (count starts at 1);
       otherwise null
-->
外部キー制約では、一意性制約内部の被参照列の位置の序数（1から始まります）です。
その他の場合はNULLです。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-parameters">
  <title><literal>parameters</literal></title>

  <para>
<!--
   The view <literal>parameters</literal> contains information about
   the parameters (arguments) of all functions in the current database.
   Only those functions are shown that the current user has access to
   (by way of being the owner or having some privilege).
-->
<literal>parameters</literal>ビューには、現在のデータベースにある全ての関数のパラメータ（引数）についての情報があります。
現在のユーザが（所有している、あるいはある権限を持っているといった方法で）アクセスできる関数についてのみが示されます。
  </para>

  <table>
<!--
   <title><literal>parameters</literal> Columns</title>
-->
   <title><literal>parameters</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>
関数を持つデータベースの名前です。
（常に現在のデータベースです。）
      </entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  See <xref
       linkend="infoschema-routines"> for more information.
-->
関数の<quote>仕様名称</quote>です。
詳細は<xref linkend="infoschema-routines">を参照してください。
      </entry>
     </row>

     <row>
      <entry><literal>ordinal_position</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Ordinal position of the parameter in the argument list of the
       function (count starts at 1)
-->
関数の引数リストにおけるパラメータの位置の序数（1から始まる）です。
      </entry>
     </row>

     <row>
      <entry><literal>parameter_mode</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       <literal>IN</literal> for input parameter,
       <literal>OUT</literal> for output parameter,
       and <literal>INOUT</literal> for input/output parameter.
-->
入力パラメータでは<literal>IN</literal>、出力パラメータでは<literal>OUT</literal>、入出力パラメータでは<literal>INOUT</literal> です。
      </entry>
     </row>

     <row>
      <entry><literal>is_result</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>as_locator</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>parameter_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the parameter, or null if the parameter has no name</entry>
-->
      <entry>
名前付きパラメータです。
無名のパラメータの場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Data type of the parameter, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
-->
組み込み型の場合、パラメータのデータ型です。
何らかの配列の場合は<literal>ARRAY</literal>です
（この場合、<literal>element_types</literal>ビューを参照してください）。
さもなくば、<literal>USER-DEFINED</literal>です
（この場合、型は<literal>udt_name</literal> と関連する列で識別されます）。
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
</entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
</entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。</entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。</entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。</entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では、この情報はパラメータデータ型に適用されないからです。
      </entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the data type of the parameter is
       defined in (always the current database)
-->
パラメータのデータ型を定義したデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the data type of the parameter is
       defined in
-->
パラメータのデータ型を定義したスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the data type of the parameter
-->
パラメータのデータ型の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry> 
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry> 
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>
常にNULLです。
<productname>PostgreSQL</>では配列の最大次数は常に無制限だからです。
      </entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the parameter,
       unique among the data type descriptors pertaining to the
       function.  This is mainly useful for joining with other
       instances of such identifiers.  (The specific format of the
       identifier is not defined and not guaranteed to remain the same
       in future versions.)
-->
関数に属するデータ型記述子内で一意なパラメータのデータ型記述子の識別子です。
これは主に、こうした識別子の他のインスタンスと結合する時に有用です
（識別子の書式の仕様は定義されておらず、また、今後のバージョンでも同一のままであるという保証もありません）。
      </entry>
     </row>

     <row>
      <entry><literal>parameter_default</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The default expression of the parameter, or null if none or if the
       function is not owned by a currently enabled role.
-->
パラメータのデフォルト式であり、存在しない場合または現在有効なロールがその関数の所有者でない場合にはNULLです。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-referential-constraints">
  <title><literal>referential_constraints</literal></title>

  <para>
<!--
   The view <literal>referential_constraints</literal> contains all
   referential (foreign key) constraints in the current database.
   Only those constraints are shown for which the current user has
   write access to the referencing table (by way of being the
   owner or having some privilege other than <literal>SELECT</literal>).
-->
<literal>referential_constraints</literal>ビューには、現在のデータベース内にある全ての参照（外部キー）制約があります。現在のユーザが、参照テーブルに（所有者、または<literal>SELECT</literal>以外の何らかの権限を持つという方法で）書き込みアクセスを持つと言う事でこれらの制約は示されます。
  </para>

  <table>
<!--
   <title><literal>referential_constraints</literal> Columns</title>
-->
   <title><literal>referential_constraints</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the constraint (always the current database)</entry>
-->
      <entry>制約を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the constraint</entry>
-->
      <entry>制約を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>制約の名前です。</entry>
     </row>

     <row>
      <entry><literal>unique_constraint_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       Name of the database that contains the unique or primary key
       constraint that the foreign key constraint references (always
       the current database)
-->
外部キー制約が参照する一意性制約、もしくはプライマリキー制約を持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>unique_constraint_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       Name of the schema that contains the unique or primary key
       constraint that the foreign key constraint references
-->
外部キー制約が参照する一意性制約、もしくはプライマリキー制約を持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>unique_constraint_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       Name of the unique or primary key constraint that the foreign
       key constraint references
-->
外部キー制約が参照する一意性制約、もしくはプライマリキー制約の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>match_option</literal></entry>
      <entry><literal>character_data</literal></entry>
      <entry>
<!--
       Match option of the foreign key constraint:
       <literal>FULL</literal>, <literal>PARTIAL</literal>, or
       <literal>NONE</literal>.
-->
外部キー制約の一致オプションです。
<literal>FULL</literal>、<literal>PARTIAL</literal>、<literal>NONE</literal>のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>update_rule</literal></entry>
      <entry><literal>character_data</literal></entry>
      <entry>
<!--
       Update rule of the foreign key constraint:
       <literal>CASCADE</literal>, <literal>SET NULL</literal>,
       <literal>SET DEFAULT</literal>, <literal>RESTRICT</literal>, or
       <literal>NO ACTION</literal>.
-->
外部キー制約の更新規則です。
<literal>CASCADE</literal>、<literal>SET NULL</literal>、<literal>SET DEFAULT</literal>、<literal>RESTRICT</literal>、<literal>NO ACTION</literal>のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>delete_rule</literal></entry>
      <entry><literal>character_data</literal></entry>
      <entry>
<!--
       Delete rule of the foreign key constraint:
       <literal>CASCADE</literal>, <literal>SET NULL</literal>,
       <literal>SET DEFAULT</literal>, <literal>RESTRICT</literal>, or
       <literal>NO ACTION</literal>.
-->
外部キー制約の削除規則です。
<literal>CASCADE</literal>、<literal>SET NULL</literal>、<literal>SET DEFAULT</literal>、<literal>RESTRICT</literal>、<literal>NO ACTION</literal>のいずれかです。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="infoschema-role-column-grants">
  <title><literal>role_column_grants</literal></title>

  <para>
<!--
   The view <literal>role_column_grants</literal> identifies all
   privileges granted on columns where the grantor or grantee is a
   currently enabled role.  Further information can be found under
   <literal>column_privileges</literal>.  The only effective
   difference between this view
   and <literal>column_privileges</literal> is that this view omits
   columns that have been made accessible to the current user by way
   of a grant to <literal>PUBLIC</literal>.
-->
<literal>role_column_grants</literal>ビューは、譲与者または被譲与者が現在有効なロールである場合、列に付与された全ての権限を識別します。
詳細な情報は<literal>column_privileges</literal>の中にあります。
このビューと<literal>column_privileges</literal>との間の実質的な違いは、このビューでは現在のユーザが<literal>PUBLIC</literal>に与えられた権限によりアクセスできるようになった列を省略していることだけです。
  </para>

  <table>
<!--
   <title><literal>role_column_grants</literal> Columns</title>
-->
   <title><literal>role_column_grants</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table that contains the column (always the current database)</entry>
-->
      <entry>
列を含むテーブルを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table that contains the column</entry>
-->
      <entry>
列を含むテーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table that contains the column</entry>
-->
      <entry>
列を含むテーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column</entry>
-->
      <entry>列の名前です。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>, or
       <literal>REFERENCES</literal>
-->
権限の種類です。
<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>、<literal>REFERENCES</literal>のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限を付与可能であれば<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-routine-grants">
  <title><literal>role_routine_grants</literal></title>

  <para>
<!--
   The view <literal>role_routine_grants</literal> identifies all
   privileges granted on functions where the grantor or grantee is a
   currently enabled role.  Further information can be found under
   <literal>routine_privileges</literal>.  The only effective
   difference between this view
   and <literal>routine_privileges</literal> is that this view omits
   functions that have been made accessible to the current user by way
   of a grant to <literal>PUBLIC</literal>.
-->
<literal>role_routine_grants</literal>ビューは、現在有効なロールが譲与者、または被譲与者で関数上に与えられた全ての権限を識別します。
詳細な情報は<literal>routine_privileges</literal>の中にあります。
このビューと<literal>routine_privileges</literal>との間の実質的な違いは、このビューでは現在のユーザが<literal>PUBLIC</literal>に与えられた権限によりアクセスできるようになった関数を省略していることだけです。
  </para>

  <table>
<!--
   <title><literal>role_routine_grants</literal> Columns</title>
-->
   <title><literal>role_routine_grants</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  See <xref
       linkend="infoschema-routines"> for more information.
-->
関数の<quote>仕様名称</quote>です。
詳細は<xref linkend="infoschema-routines">を参照してください。
      </entry>
     </row>

     <row>
      <entry><literal>routine_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>routine_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>routine_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the function (might be duplicated in case of overloading)</entry>
-->
      <entry>関数の名前です（オーバーロードされている場合は重複する可能性があります）。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>EXECUTE</literal> (the only privilege type for functions)</entry>
-->
      <entry>常に<literal>EXECUTE</literal>です（関数用の唯一の権限です）。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能な場合<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-table-grants">
  <title><literal>role_table_grants</literal></title>

  <para>
<!--
   The view <literal>role_table_grants</literal> identifies all
   privileges granted on tables or views where the grantor or grantee
   is a currently enabled role.  Further information can be found
   under <literal>table_privileges</literal>.  The only effective
   difference between this view
   and <literal>table_privileges</literal> is that this view omits
   tables that have been made accessible to the current user by way of
   a grant to <literal>PUBLIC</literal>.
-->
<literal>role_table_grants</literal>ビューは、現在有効なロールが譲与者または被譲与者であるテーブルやビュー上に与えられた全ての権限を識別します。
詳細な情報は<literal>table_privileges</literal>の中にあります。
このビューと<literal>table_privileges</literal>との間の実質的な違いは、このビューでは現在のユーザが<literal>PUBLIC</literal>に与えられた権限によりアクセスできるようになったテーブルを省略していることだけです。
  </para>

  <table>
<!--
   <title><literal>role_table_grants</literal> Columns</title>
-->
   <title><literal>role_table_grants</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table (always the current database)</entry>
-->
      <entry>テーブルを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table</entry>
-->
      <entry>テーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>,
       <literal>DELETE</literal>, <literal>TRUNCATE</literal>,
       <literal>REFERENCES</literal>, or <literal>TRIGGER</literal>
-->
権限の種類は、
<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>、<literal>DELETE</literal>、<literal>TRUNCATE</literal>、<literal>REFERENCES</literal>、または<literal>TRIGGER</literal>のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能な場合<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>

     <row>
      <entry><literal>with_hierarchy</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       In the SQL standard, <literal>WITH HIERARCHY OPTION</literal>
       is a separate (sub-)privilege allowing certain operations on
       table inheritance hierarchies.  In PostgreSQL, this is included
       in the <literal>SELECT</literal> privilege, so this column
       shows <literal>YES</literal> if the privilege
       is <literal>SELECT</literal>, else <literal>NO</literal>.
-->
SQL標準では、<literal>WITH HIERARCHY OPTION</literal>は、継承テーブル階層に対するある操作を許可する独立した（副次）権限です。
PostgreSQLでは、これは<literal>SELECT</literal>権限に含まれているため、この列は権限が<literal>SELECT</literal>の場合は<literal>YES</literal>、それ以外の場合は<literal>NO</literal>です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-udt-grants">
  <title><literal>role_udt_grants</literal></title>

  <para>
<!--
   The view <literal>role_udt_grants</literal> is intended to identify
   <literal>USAGE</literal> privileges granted on user-defined types
   where the grantor or grantee is a currently enabled role.  Further
   information can be found under
   <literal>udt_privileges</literal>.  The only effective difference
   between this view and <literal>udt_privileges</literal> is that
   this view omits objects that have been made accessible to the
   current user by way of a grant to <literal>PUBLIC</literal>.  Since
   data types do not have real privileges in PostgreSQL, but only an
   implicit grant to <literal>PUBLIC</literal>, this view is empty.
-->
<literal>role_udt_grants</literal>ビューは、現在有効なロールが付与者また被付与者である、ユーザ定義型に付与された<literal>USAGE</literal>権限を識別することを意図したものです。それ以上の情報は<literal>udt_privileges</literal>で見つかります。
このビューと<literal>udt_privileges</literal>ビューとの間の実質的な違いは、このビューでは現在のユーザが<literal>PUBLIC</literal>に与えられた権限によりアクセスできるようになったオブジェクトを省略していることだけです。
PostgreSQLではデータ型は実際の権限を持たず、<literal>PUBLIC</literal>に対する暗黙の権限付与しか持たないため、このビューは空です。
  </para>

  <table>
<!--
   <title><literal>role_udt_grants</literal> Columns</title>
-->
   <title><literal>role_udt_grants</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>The name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>The name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前</entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the type (always the current database)</entry>
-->
      <entry>型を持つデータベースの名前（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the type</entry>
-->
      <entry>型を持つスキーマの名前</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the type</entry>
-->
      <entry>型の名前</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>TYPE USAGE</literal></entry>
-->
      <entry>常に<literal>TYPE USAGE</literal></entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能であれば<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-usage-grants">
  <title><literal>role_usage_grants</literal></title>

  <para>
<!--
   The view <literal>role_usage_grants</literal> identifies
   <literal>USAGE</literal> privileges granted on various kinds of
   objects where the grantor or grantee is a currently enabled role.
   Further information can be found under
   <literal>usage_privileges</literal>.  The only effective difference
   between this view and <literal>usage_privileges</literal> is that
   this view omits objects that have been made accessible to the
   current user by way of a grant to <literal>PUBLIC</literal>.
-->
<literal>role_usage_grants</literal>ビューは、譲与者または被譲与者が現在有効なロールである多くの種類のオブジェクトに対し、<literal>USAGE</literal>権限を識別します。
詳細な情報は<literal>usage_privileges</literal>の中にあります。
このビューと<literal>usage_privileges</literal>ビューとの間の実質的な違いは、このビューでは現在のユーザが<literal>PUBLIC</literal>に与えられた権限によりアクセスできるようになったオブジェクトを省略していることだけです。
  </para>

  <table>
<!--
   <title><literal>role_usage_grants</literal> Columns</title>
-->
   <title><literal>role_usage_grants</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>The name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>The name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前</entry>
     </row>

     <row>
      <entry><literal>object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the object (always the current database)</entry>
-->
      <entry>オブジェクトを持つデータベースの名前（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the object, if applicable,
      else an empty string</entry>
-->
      <entry>適用されればオブジェクトを持つスキーマの名前で、そうでなければ空文字列</entry>
     </row>

     <row>
      <entry><literal>object_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the object</entry>
-->
      <entry>オブジェクトの名前です。</entry>
     </row>

     <row>
      <entry><literal>object_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry><literal>COLLATION</literal> or <literal>DOMAIN</literal> or <literal>FOREIGN DATA WRAPPER</literal> or <literal>FOREIGN SERVER</literal> or <literal>SEQUENCE</literal></entry>
-->
      <entry><literal>COLLATION</literal>または<literal>DOMAIN</literal>または<literal>FOREIGN DATA WRAPPER</literal>または<literal>FOREIGN SERVER</literal>または<literal>SEQUENCE</literal></entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>USAGE</literal></entry>
-->
      <entry>常に<literal>USAGE</literal>です。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能であれば<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-privileges">
  <title><literal>routine_privileges</literal></title>

  <para>
<!--
   The view <literal>routine_privileges</literal> identifies all
   privileges granted on functions to a currently enabled role or by a
   currently enabled role.  There is one row for each combination of function,
   grantor, and grantee.
-->
<literal>routine_privileges</literal>ビューは、現在有効なロールに与えられた権限、あるいは現在有効なロールによって関数に与えられた権限を全て識別します。
関数、権限の譲与者と被譲与者の組み合わせごとに1行あります。
  </para>

  <table>
<!--
   <title><literal>routine_privileges</literal> Columns</title>
-->
   <title><literal>routine_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  See <xref
       linkend="infoschema-routines"> for more information.
-->
関数の<quote>仕様名称</quote>です。
詳細は<xref linkend="infoschema-routines">を参照してください。
      </entry>
     </row>

     <row>
      <entry><literal>routine_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>routine_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>routine_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the function (might be duplicated in case of overloading)</entry>
-->
      <entry>関数の名前です（オーバーロードされている場合は重複する場合があります）。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>EXECUTE</literal> (the only privilege type for functions)</entry>
-->
      <entry>常に<literal>EXECUTE</literal>です（関数用の唯一の権限です）。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能な場合<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routines">
  <title><literal>routines</literal></title>

  <para>
<!--
   The view <literal>routines</literal> contains all functions in the
   current database.  Only those functions are shown that the current
   user has access to (by way of being the owner or having some
   privilege).
-->
<literal>routines</literal>ビューには現在のデータベース内の全ての関数があります。
表示される関数は、現在のユーザが（所有者である、何らかの権限を持っているといった方法で）アクセスできるものだけです。
  </para>

  <table>
<!--
   <title><literal>routines</literal> Columns</title>
-->
   <title><literal>routines</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  This is a
       name that uniquely identifies the function in the schema, even
       if the real name of the function is overloaded.  The format of
       the specific name is not defined, it should only be used to
       compare it to other instances of specific routine names.
-->
関数の<quote>仕様名称</quote>です。
これは、その関数の実際の名前がオーバーロードされていたとしても、スキーマ内の関数を一意に識別する名前です。
仕様名称の書式は定義されておらず、特定の関数名の他のインスタンスと比較するためにのみ使用されます。
      </entry>
     </row>

     <row>
      <entry><literal>routine_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>routine_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>routine_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the function (might be duplicated in case of overloading)</entry>
-->
      <entry>関数の名前です（オーバーロードされている場合重複することがあります）。</entry>
     </row>

     <row>
      <entry><literal>routine_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always <literal>FUNCTION</literal> (In the future there might
       be other types of routines.)
-->
       常に<literal>FUNCTION</literal>です（将来他の関数種類が含まれる可能性があります）。
      </entry>
     </row>

     <row>
      <entry><literal>module_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>module_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>module_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Return data type of the function, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>type_udt_name</literal> and associated
       columns).
-->
関数の戻り値が組み込み型の場合、そのデータ型です。
何らかの配列の場合は<literal>ARRAY</literal>です
（この場合は、<literal>element_types</literal>ビューを参照してください）。
さもなくば、<literal>USER-DEFINED</literal>です
（この場合、その型は<literal>type_udt_name</literal>と関連する列によって識別されます）。
      </entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, since this information is not applied to return data types in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>ではこの情報は戻り値のデータ型に当てはまりません。</entry>
     </row>

     <row>
      <entry><literal>type_udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that the return data type of the function
       is defined in (always the current database)
-->
関数の戻り値のデータ型が定義されたデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>type_udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that the return data type of the function is
       defined in
-->
関数の戻り値のデータ型が定義されたスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>type_udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the return data type of the function
-->
関数の戻り値のデータ型の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</></entry>
-->
      <entry>常にNULLです。<productname>PostgreSQL</>では配列の最大次数は常に無制限だからです。
</entry>
     </row>

     <row>
      <entry><literal>dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       An identifier of the data type descriptor of the return data
       type of this function, unique among the data type descriptors
       pertaining to the function.  This is mainly useful for joining
       with other instances of such identifiers.  (The specific format
       of the identifier is not defined and not guaranteed to remain
       the same in future versions.)
-->
この関数に属するデータ型記述子中で一意な、関数の戻り値のデータ型のデータ型記述子の識別子です。
これは主に、そうした識別子の他のインスタンスと結合する際に有用です。
（識別子の書式仕様は定義されておらず、将来のバージョンで同じままであるという保証もありません。）
      </entry>
     </row>

     <row>
      <entry><literal>routine_body</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If the function is an SQL function, then
       <literal>SQL</literal>, else <literal>EXTERNAL</literal>.
-->
関数がSQL関数ならば<literal>SQL</literal>、さもなくば<literal>EXTERNAL</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>routine_definition</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The source text of the function (null if the function is not
       owned by a currently enabled role).  (According to the SQL
       standard, this column is only applicable if
       <literal>routine_body</literal> is <literal>SQL</literal>, but
       in <productname>PostgreSQL</productname> it will contain
       whatever source text was specified when the function was
       created.)
-->
関数のソーステキストです
（現在有効なロールがその関数の所有者でなければNULLです）。
（標準SQLに従うと、<literal>routine_body</literal>が<literal>SQL</literal>の場合にのみ適用されます。
しかし、<productname>PostgreSQL</productname>では、関数が作成された時に指定されたソーステキストが常に含まれます。）
      </entry>
     </row>

     <row>
      <entry><literal>external_name</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If this function is a C function, then the external name (link
       symbol) of the function; else null.  (This works out to be the
       same value that is shown in
       <literal>routine_definition</literal>.)
-->
関数がC関数の場合関数の外部名（リンクシンボル）、さもなくばNULLです。
（これは<literal>routine_definition</literal>で示した値と同じになるように動作します。）
      </entry>
     </row>

     <row>
      <entry><literal>external_language</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>The language the function is written in</entry>
-->
      <entry>その関数を作成した言語です。</entry>
     </row>

     <row>
      <entry><literal>parameter_style</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always <literal>GENERAL</literal> (The SQL standard defines
       other parameter styles, which are not available in <productname>PostgreSQL</>.)
-->
常に<literal>GENERAL</literal>です
（標準SQLでは他のパラメータ様式も定義していますが、これらは<productname>PostgreSQL</>では使用できません）。
      </entry>
     </row>

     <row>
      <entry><literal>is_deterministic</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       If the function is declared immutable (called deterministic in
       the SQL standard), then <literal>YES</literal>, else
       <literal>NO</literal>.  (You cannot query the other volatility
       levels available in <productname>PostgreSQL</> through the information schema.)
-->
関数が不変である（標準SQLでは決定性があると呼びます）と宣言されている場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
（情報スキーマ経由では<productname>PostgreSQL</>で使用できる他の変動レベルを問い合わせることはできません。）
      </entry>
     </row>

     <row>
      <entry><literal>sql_data_access</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always <literal>MODIFIES</literal>, meaning that the function
       possibly modifies SQL data.  This information is not useful for
       <productname>PostgreSQL</>.
-->
常に、関数がSQLデータを変更することができることを意味する<literal>MODIFIES</literal>です。
この情報は<productname>PostgreSQL</>では有用ではありません。
      </entry>
     </row>

     <row>
      <entry><literal>is_null_call</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       If the function automatically returns null if any of its
       arguments are null, then <literal>YES</literal>, else
       <literal>NO</literal>.
-->
その関数の引数のいずれかがNULLの場合に、自動的にNULLを返す場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>sql_path</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>schema_level_routine</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       Always <literal>YES</literal> (The opposite would be a method
       of a user-defined type, which is a feature not available in
       <productname>PostgreSQL</>.)
-->
常に<literal>YES</literal>です。
（この反対はユーザ定義の種類による方法となります。
これは<productname>PostgreSQL</>では使用できない機能です。）
      </entry>
     </row>

     <row>
      <entry><literal>max_dynamic_result_sets</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_user_defined_cast</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_implicitly_invocable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>security_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       If the function runs with the privileges of the current user,
       then <literal>INVOKER</literal>, if the function runs with the
       privileges of the user who defined it, then
       <literal>DEFINER</literal>.
-->
現在のユーザ権限で関数が動作する場合<literal>INVOKER</literal>、定義したユーザの権限で関数が動作する場合<literal>DEFINER</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>to_sql_specific_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>to_sql_specific_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>to_sql_specific_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>as_locator</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>created</literal></entry>
      <entry><type>time_stamp</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>last_altered</literal></entry>
      <entry><type>time_stamp</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>new_savepoint_level</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_udt_dependent</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       Currently always <literal>NO</literal>.  The alternative
       <literal>YES</literal> applies to a feature not available in
       <productname>PostgreSQL</>.
-->
現在は常に<literal>NO</literal>です。もう一方の<literal>YES</literal>は<productname>PostgreSQL</>で利用できない機能に適用されるものです。
      </entry>
     </row>

     <row>
      <entry><literal>result_cast_from_data_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_as_locator</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_char_max_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_char_octet_length</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_char_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_char_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_char_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_datetime_precision</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_interval_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_type_udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_type_udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_type_udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_scope_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_scope_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_scope_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_maximum_cardinality</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>result_cast_dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-schemata">
  <title><literal>schemata</literal></title>

  <para>
<!--
   The view <literal>schemata</literal> contains all schemas in the current
   database that the current user has access to (by way of being the owner or
   having some privilege).
-->
<literal>schemata</literal>ビューには、現在のデータベースの中で現在のユーザが（所有者である、または、何らかの権限を持つために）アクセスできるすべてのスキーマがあります。
  </para>

  <table>
<!--
   <title><literal>schemata</literal> Columns</title>
-->
   <title><literal>schemata</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>catalog_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the schema is contained in (always the current database)</entry>
-->
      <entry>スキーマを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>schema_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema</entry>
-->
      <entry>スキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>schema_owner</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the owner of the schema</entry>
-->
      <entry>スキーマの所有者の名前です。</entry>
     </row>

     <row>
      <entry><literal>default_character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>default_character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>default_character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>sql_path</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sequences">
  <title><literal>sequences</literal></title>

  <para>
<!--
   The view <literal>sequences</literal> contains all sequences
   defined in the current database.  Only those sequences are shown
   that the current user has access to (by way of being the owner or
   having some privilege).
-->
<literal>sequences</literal>ビューは、現在のデータベース内で定義されたすべてのシーケンスがあります。
現在のユーザが（所有者である、または、何らかの権限を持つために）アクセスできるシーケンスのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>sequences</literal> Columns</title>
-->
   <title><literal>sequences</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>sequence_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the sequence (always the current database)</entry>
-->
      <entry>シーケンスを含むデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>sequence_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the sequence</entry>
-->
      <entry>シーケンスを含むスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>sequence_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the sequence</entry>
-->
      <entry>シーケンスの名前です。</entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The data type of the sequence.  In
       <productname>PostgreSQL</productname>, this is currently always
       <literal>bigint</literal>.
-->
シーケンスのデータ型です。
現在<productname>PostgreSQL</productname>では常に<literal>bigint</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       This column contains the (declared or implicit) precision of
       the sequence data type (see above).  The precision indicates
       the number of significant digits.  It can be expressed in
       decimal (base 10) or binary (base 2) terms, as specified in the
       column <literal>numeric_precision_radix</literal>.
-->
この列は（宣言された、あるいは、暗黙的な）シーケンスデータ型の精度（上述）です。
精度は有効桁数を意味します。
<literal>numeric_precision_radix</literal>の指定に従い、これは10進数（10を基とする）または2進数（2を基とする）で表現されます。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       This column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.
-->
この列は、<literal>numeric_precision</literal>および<literal>numeric_scale</literal>で表現される値の基が何かを識別します。
値は2または10です。
      </entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       This column contains the (declared or implicit) scale of the
       sequence data type (see above).  The scale indicates the number
       of significant digits to the right of the decimal point.  It
       can be expressed in decimal (base 10) or binary (base 2) terms,
       as specified in the column
       <literal>numeric_precision_radix</literal>.
-->
この列はシーケンスデータ型の（宣言された、または、暗黙的な）位取り（上述）です。
位取りは、小数点以下の有効桁数を意味します。
<literal>numeric_precision_radix</literal>の指定に従い、これは10進数（10を基とする）または2進数（2を基とする）で表現されます。
      </entry>
     </row>

     <row>
      <entry><literal>start_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>The start value of the sequence</entry>
-->
      <entry>シーケンスの開始値です。</entry>
     </row>

     <row>
      <entry><literal>minimum_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>The minimum value of the sequence</entry>
-->
      <entry>シーケンスの最小値です。</entry>
     </row>

     <row>
      <entry><literal>maximum_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>The maximum value of the sequence</entry>
-->
      <entry>シーケンスの最大値です。</entry>
     </row>

     <row>
      <entry><literal>increment</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>The increment of the sequence</entry>
-->
      <entry>シーケンスの増加値です。</entry>
     </row>

     <row>
      <entry><literal>cycle_option</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the sequence cycles, else <literal>NO</literal></entry>
-->
      <entry>シーケンスが周回する場合は<literal>YES</literal>、それ以外は<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Note that in accordance with the SQL standard, the start, minimum,
   maximum, and increment values are returned as character strings.
-->
SQL標準に従い、開始、最小、最大および増加の値が文字列で返されることに注意してください。
  </para>
 </sect1>

 <sect1 id="infoschema-sql-features">
  <title><literal>sql_features</literal></title>

  <para>
<!--
   The table <literal>sql_features</literal> contains information
   about which formal features defined in the SQL standard are
   supported by <productname>PostgreSQL</productname>.  This is the
   same information that is presented in <xref linkend="features">.
   There you can also find some additional background information.
-->
<literal>sql_features</literal>ビューには、標準SQLで定義された公式な機能のどれが<productname>PostgreSQL</productname>でサポートされているかについての情報があります。
これは<xref linkend="features">内に記された情報と同じものです。
また、ここには背景について追加情報がいくつかあります。
  </para>

  <table>
<!--
   <title><literal>sql_features</literal> Columns</title>
-->
   <title><literal>sql_features</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>feature_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Identifier string of the feature</entry>
-->
      <entry>機能の識別文字列です。</entry>
     </row>

     <row>
      <entry><literal>feature_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the feature</entry>
-->
      <entry>機能の説明的な名前です。</entry>
     </row>

     <row>
      <entry><literal>sub_feature_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Identifier string of the subfeature, or a zero-length string if not a subfeature</entry>
-->
      <entry>副機能の識別子です。副機能がない場合は空の文字列です。</entry>
     </row>

     <row>
      <entry><literal>sub_feature_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the subfeature, or a zero-length string if not a subfeature</entry>
-->
      <entry>副機能の説明的な名前です。副機能がない場合は空の文字列です。</entry>
     </row>

     <row>
      <entry><literal>is_supported</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the feature is fully supported by the
       current version of <productname>PostgreSQL</>, <literal>NO</literal> if not
-->
現在のバージョンの<productname>PostgreSQL</>で機能が完全にサポートされている場合は<literal>YES</literal>です。さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_verified_by</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always null, since the <productname>PostgreSQL</> development group does not
       perform formal testing of feature conformance
-->
常にNULLです。
<productname>PostgreSQL</>開発グループは機能が準拠しているかどうかについて公式な試験を行っていないからです。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment about the supported status of the feature</entry>
-->
      <entry>おそらく機能のサポート状況についてのコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-implementation-info">
  <title><literal>sql_implementation_info</literal></title>

  <para>
<!--
   The table <literal>sql_implementation_info</literal> contains
   information about various aspects that are left
   implementation-defined by the SQL standard.  This information is
   primarily intended for use in the context of the ODBC interface;
   users of other interfaces will probably find this information to be
   of little use.  For this reason, the individual implementation
   information items are not described here; you will find them in the
   description of the ODBC interface.
-->
<literal>sql_implementation_info</literal>ビューには、標準SQLで実装依存で定義するものとされている各種状況に関する情報があります。
この情報は主にODBCインタフェース環境での使用を意図しています。
他のインタフェースのユーザはおそらくこの情報があまり役に立たないものと考えるでしょう。
このため、個々の実装情報項目をここでは記載しません。
ODBCインタフェースの説明でそれらを説明します。
  </para>

  <table>
<!--
   <title><literal>sql_implementation_info</literal> Columns</title>
-->
   <title><literal>sql_implementation_info</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>implementation_info_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Identifier string of the implementation information item</entry>
-->
      <entry>実装情報項目の識別文字列です。</entry>
     </row>

     <row>
      <entry><literal>implementation_info_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the implementation information item</entry>
-->
      <entry>実装情報項目の説明的な名前です。</entry>
     </row>

     <row>
      <entry><literal>integer_value</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Value of the implementation information item, or null if the
       value is contained in the column
       <literal>character_value</literal>
-->
実装情報項目の値です。
その値が<literal>character_value</literal>にある場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>character_value</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Value of the implementation information item, or null if the
       value is contained in the column
       <literal>integer_value</literal>
-->
実装情報項目の値です。
その値が<literal>integer_value</literal>にある場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment pertaining to the implementation information item</entry>
-->
      <entry>おそらく実装情報項目に関するコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-languages">
  <title><literal>sql_languages</literal></title>

  <para>
<!--
   The table <literal>sql_languages</literal> contains one row for
   each SQL language binding that is supported by
   <productname>PostgreSQL</productname>.
   <productname>PostgreSQL</productname> supports direct SQL and
   embedded SQL in C; that is all you will learn from this table.
-->
<literal>sql_languages</literal>テーブルには、<productname>PostgreSQL</productname>でサポートされる、各SQL言語バインディングに対して1行が含まれます。
<productname>PostgreSQL</productname>は直接的SQLとC言語による埋め込みSQLをサポートします。
これがこのテーブルから理解できるすべてです。
  </para>

  <para>
<!--
   This table was removed from the SQL standard in SQL:2008, so there
   are no entries referring to standards later than SQL:2003.
-->
このテーブルはSQL標準 SQL:2008から削除されたので、SQL:2003以降の標準を参照するエントリはありません。
  </para>

  <table>
<!--
   <title><literal>sql_languages</literal> Columns</title>
-->
   <title><literal>sql_languages</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>sql_language_source</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The name of the source of the language definition; always
       <literal>ISO 9075</literal>, that is, the SQL standard
-->
言語定義のソースの名前です。
常に標準SQLを表す<literal>ISO 9075</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>sql_language_year</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The year the standard referenced in
       <literal>sql_language_source</literal> was approved.
-->
<literal>sql_language_source</literal> で参照される標準が承認された年です。
      </entry>
     </row>

     <row>
      <entry><literal>sql_language_conformance</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The standard conformance level for the language binding.  For
       ISO 9075:2003 this is always <literal>CORE</literal>.
-->
言語バインディングの標準準拠レベルです。
ISO 9075:2003では、これは常に<literal>CORE</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>sql_language_integrity</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always null (This value is relevant to an earlier version of the SQL standard.)</entry>
-->
      <entry>常にNULLです（この値は標準SQLの初期のバージョンでは重要です）。</entry>
     </row>

     <row>
      <entry><literal>sql_language_implementation</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always null</entry>
-->
      <entry>常にNULLです。</entry>
     </row>

     <row>
      <entry><literal>sql_language_binding_style</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The language binding style, either <literal>DIRECT</literal> or
       <literal>EMBEDDED</literal>
-->
<literal>DIRECT</literal>もしくは<literal>EMBEDDED</literal>のいずれかの言語バインディング様式です。
      </entry>
     </row>

     <row>
      <entry><literal>sql_language_programming_language</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       The programming language, if the binding style is
       <literal>EMBEDDED</literal>, else null.  <productname>PostgreSQL</> only
       supports the language C.
-->
バインディング様式が<literal>EMBEDDED</literal>の場合はプログラミング言語です。
さもなくばNULLです。
<productname>PostgreSQL</>ではC言語のみをサポートします。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-packages">
  <title><literal>sql_packages</literal></title>

  <para>
<!--
   The table <literal>sql_packages</literal> contains information
   about which feature packages defined in the SQL standard are
   supported by <productname>PostgreSQL</productname>.  Refer to <xref
   linkend="features"> for background information on feature packages.
-->
<literal>sql_packages</literal>テーブルには、どの標準SQLで定義された機能パッケージが<productname>PostgreSQL</productname>でサポートされているかに関する情報があります。
機能パッケージの背景情報については<xref linkend="features">を参照してください。
  </para>

  <table>
<!--
   <title><literal>sql_packages</literal> Columns</title>
-->
   <title><literal>sql_packages</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>feature_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Identifier string of the package</entry>
-->
      <entry>パッケージの識別文字列です。</entry>
     </row>

     <row>
      <entry><literal>feature_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the package</entry>
-->
      <entry>パッケージの説明的な名前です。</entry>
     </row>

     <row>
      <entry><literal>is_supported</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the package is fully supported by the
       current version of <productname>PostgreSQL</>, <literal>NO</literal> if not
-->
パッケージが現在のバージョンの<productname>PostgreSQL</>で完全にサポートされている場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_verified_by</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always null, since the <productname>PostgreSQL</> development group does not
       perform formal testing of feature conformance
-->
常にNULLです。
<productname>PostgreSQL</>開発グループは機能が準拠しているかどうかについて公式な試験を行っていないからです。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment about the supported status of the package</entry>
-->
      <entry>おそらくパッケージのサポート状況に関するコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-parts">
  <title><literal>sql_parts</literal></title>

  <para>
<!--
   The table <literal>sql_parts</literal> contains information about
   which of the several parts of the SQL standard are supported by
   <productname>PostgreSQL</productname>.
-->
<literal>sql_parts</literal>テーブルは、標準SQLのどの部分が<productname>PostgreSQL</productname>でサポートされているかに関する情報を持ちます。
  </para>

  <table>
<!--
   <title><literal>sql_parts</literal> Columns</title>
-->
   <title><literal>sql_parts</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>feature_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>An identifier string containing the number of the part</entry>
-->
      <entry>部品番号を含む識別文字列です。</entry>
     </row>

     <row>
      <entry><literal>feature_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the part</entry>
-->
      <entry>部品の説明的な名称です。</entry>
     </row>

     <row>
      <entry><literal>is_supported</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the part is fully supported by the
       current version of <productname>PostgreSQL</>,
       <literal>NO</literal> if not
-->
<productname>PostgreSQL</>の現在のバージョンで部品が完全にサポートされている場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_verified_by</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Always null, since the <productname>PostgreSQL</> development group does not
       perform formal testing of feature conformance
-->
常にNULLです。
<productname>PostgreSQL</>開発グループは公式な機能準拠検査を行いません。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment about the supported status of the part</entry>
-->
      <entry>おそらく部品のサポート状況に関するコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-sizing">
  <title><literal>sql_sizing</literal></title>

  <para>
<!--
   The table <literal>sql_sizing</literal> contains information about
   various size limits and maximum values in
   <productname>PostgreSQL</productname>.  This information is
   primarily intended for use in the context of the ODBC interface;
   users of other interfaces will probably find this information to be
   of little use.  For this reason, the individual sizing items are
   not described here; you will find them in the description of the
   ODBC interface.
-->
<literal>sql_sizing</literal>テーブルには、<productname>PostgreSQL</productname>中の各種サイズ制限と上限値に関する情報があります。
この情報は主にODBCインタフェース環境での使用を意図しています。
他のインタフェースのユーザはおそらくこの情報があまり役に立たないものと考えるでしょう。
このため、個々のサイズ調整項目はここでは記載しません。
ODBCインタフェースの説明でそれらを説明します。
  </para>

  <table>
<!--
   <title><literal>sql_sizing</literal> Columns</title>
-->
   <title><literal>sql_sizing</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>sizing_id</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Identifier of the sizing item</entry>
-->
      <entry>サイズ調整項目の識別子です。</entry>
     </row>

     <row>
      <entry><literal>sizing_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the sizing item</entry>
-->
      <entry>サイズ調整項目の説明的な名前です。</entry>
     </row>

     <row>
      <entry><literal>supported_value</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       Value of the sizing item, or 0 if the size is unlimited or
       cannot be determined, or null if the features for which the
       sizing item is applicable are not supported
-->
サイズ調整項目の値です。サイズに制限がない場合や決定できない場合はゼロです。
サイズ調整項目を適用する機能がサポートされない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment pertaining to the sizing item</entry>
-->
      <entry>おそらくサイズ調整項目に関するコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-sizing-profiles">
  <title><literal>sql_sizing_profiles</literal></title>

  <para>
<!--
   The table <literal>sql_sizing_profiles</literal> contains
   information about the <literal>sql_sizing</literal> values that are
   required by various profiles of the SQL standard.  <productname>PostgreSQL</> does
   not track any SQL profiles, so this table is empty.
-->
<literal>sql_sizing_profiles</literal>テーブルには、標準SQLの各種プロファイルで要求される<literal>sql_sizing</literal>値に関する情報があります。
<productname>PostgreSQL</>ではSQLプロファイルをまったく追いかけていませんので、このテーブルは空です。
  </para>

  <table>
<!--
   <title><literal>sql_sizing_profiles</literal> Columns</title>
-->
   <title><literal>sql_sizing_profiles</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>sizing_id</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Identifier of the sizing item</entry>
-->
      <entry>サイズ調整項目の識別子です。</entry>
     </row>

     <row>
      <entry><literal>sizing_name</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Descriptive name of the sizing item</entry>
-->
      <entry>サイズ調整項目の説明的な名前です。</entry>
     </row>

     <row>
      <entry><literal>profile_id</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Identifier string of a profile</entry>
-->
      <entry>プロファイルの識別文字列です。</entry>
     </row>

     <row>
      <entry><literal>required_value</literal></entry>
      <entry><type>cardinal_number</type></entry>
      <entry>
<!--
       The value required by the SQL profile for the sizing item, or 0
       if the profile places no limit on the sizing item, or null if
       the profile does not require any of the features for which the
       sizing item is applicable
-->
サイズ調整項目用のSQLプロファイルで要求される値です。
プロファイルでそのサイズ調整項目に制限を設けていない場合はゼロ、プロファイルでサイズ調整項目を適用する機能を要求していない場合はNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>comments</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Possibly a comment pertaining to the sizing item within the profile</entry>
-->
      <entry>おそらくプロファイル内のサイズ調整項目に関するコメントです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-table-constraints">
  <title><literal>table_constraints</literal></title>

  <para>
<!--
   The view <literal>table_constraints</literal> contains all
   constraints belonging to tables that the current user owns or has
   some privilege other than <literal>SELECT</literal> on.
-->
<literal>table_constraints</literal>ビューには、現在のユーザが所有する、または何らかのSELECT以外の権限を持つテーブルに属する全ての制約があります。
  </para>

  <table>
<!--
   <title><literal>table_constraints</literal> Columns</title>
-->
   <title><literal>table_constraints</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>constraint_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the constraint (always the current database)</entry>
-->
      <entry>
制約を持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>constraint_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the constraint</entry>
-->
      <entry>
制約を持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>constraint_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the constraint</entry>
-->
      <entry>
制約の名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table (always the current database)</entry>
-->
      <entry>
テーブルを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table</entry>
-->
      <entry>
テーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>
テーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>constraint_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the constraint: <literal>CHECK</literal>,
       <literal>FOREIGN KEY</literal>, <literal>PRIMARY KEY</literal>,
       or <literal>UNIQUE</literal>
-->
制約の種類です。
<literal>CHECK</literal>、<literal>FOREIGN KEY</literal>、<literal>PRIMARY KEY</literal>、<literal>UNIQUE</literal>のいずれかです。
      </entry>
     </row>

     <row>
      <entry><literal>is_deferrable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the constraint is deferrable, <literal>NO</literal> if not</entry>
-->
      <entry>
制約が遅延可能な場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>initially_deferred</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the constraint is deferrable and initially deferred, <literal>NO</literal> if not</entry>
-->
      <entry>
制約が遅延可能、かつ、初期状態が遅延の場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-table-privileges">
  <title><literal>table_privileges</literal></title>

  <para>
<!--
   The view <literal>table_privileges</literal> identifies all
   privileges granted on tables or views to a currently enabled role
   or by a currently enabled role.  There is one row for each
   combination of table, grantor, and grantee.
-->
<literal>table_privileges</literal>ビューは、現在有効なロールに対し、または現在有効なロールによって、テーブルもしくはビューに与えられた権限を全て識別します。
テーブル、譲与者、被譲与者の組み合わせごとに1行があります。
  </para>

  <table>
<!--
   <title><literal>table_privileges</literal> Columns</title>
-->
   <title><literal>table_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table (always the current database)</entry>
-->
      <entry>テーブルを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table</entry>
-->
      <entry>テーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>,
       <literal>DELETE</literal>, <literal>TRUNCATE</literal>,
       <literal>REFERENCES</literal>, or <literal>TRIGGER</literal>
-->
権限の種類は、<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>、<literal>DELETE</literal>、<literal>TRUNCATE</literal>、<literal>REFERENCES</literal>もしくは<literal>TRIGGER</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>この権限を付与可能な場合は<literal>YES</literal>、さもなくば<literal>NO</literal>です。</entry>
     </row>

     <row>
      <entry><literal>with_hierarchy</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       In the SQL standard, <literal>WITH HIERARCHY OPTION</literal>
       is a separate (sub-)privilege allowing certain operations on
       table inheritance hierarchies.  In PostgreSQL, this is included
       in the <literal>SELECT</literal> privilege, so this column
       shows <literal>YES</literal> if the privilege
       is <literal>SELECT</literal>, else <literal>NO</literal>.
-->
SQL標準では、<literal>WITH HIERARCHY OPTION</literal>は、継承テーブル階層に対するある操作を許可する独立した（副次）権限です。
PostgreSQLでは、これは<literal>SELECT</literal>権限に含まれているため、この列は権限が<literal>SELECT</literal>の場合は<literal>YES</literal>、それ以外の場合は<literal>NO</literal>です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-tables">
  <title><literal>tables</literal></title>

  <para>
<!--
   The view <literal>tables</literal> contains all tables and views
   defined in the current database.  Only those tables and views are
   shown that the current user has access to (by way of being the
   owner or having some privilege).
-->
<literal>tables</literal>ビューには、現在のデータベースで定義された全てのテーブルとビューがあります。
現在のユーザが（所有している、何らかの権限を持っているといった方法で）アクセスできるテーブルとビューのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>tables</literal> Columns</title>
-->
   <title><literal>tables</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the table (always the current database)</entry>
-->
      <entry>テーブルを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table</entry>
-->
      <entry>テーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table</entry>
-->
      <entry>テーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_type</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Type of the table: <literal>BASE TABLE</literal> for a
       persistent base table (the normal table type),
       <literal>VIEW</literal> for a view, <literal>FOREIGN TABLE</literal>
       for a foreign table, or
       <literal>LOCAL TEMPORARY</literal> for a temporary table
-->
テーブルの種類です。
永続テーブル（普通のテーブルの種類）では<literal>BASE TABLE</literal>、ビューでは<literal>VIEW</literal>、外部テーブルでは<literal>FOREIGN TABLE</literal>、一時テーブルでは<literal>LOCAL TEMPORARY</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>self_referencing_column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>reference_generation</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>user_defined_type_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       If the table is a typed table, the name of the database that
       contains the underlying data type (always the current
       database), else null.
-->
テーブルが型付けされたテーブルの場合、背後のデータ型を持つデータベース(常に現在のデータベース)の名前です。
さもなくばNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>user_defined_type_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       If the table is a typed table, the name of the schema that
       contains the underlying data type, else null.
-->
テーブルが型付けされたテーブルである場合、背後のデータ型を含むスキーマの名前です。
さもなくばNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>user_defined_type_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       If the table is a typed table, the name of the underlying data
       type, else null.
-->
テーブルが型付けされたテーブルである場合、背後のデータ型の名前です。
さもなくばNULLです。
      </entry>
     </row>

     <row>
      <entry><literal>is_insertable_into</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the table is insertable into,
       <literal>NO</literal> if not (Base tables are always insertable
       into, views not necessarily.)
-->
テーブルが挿入可能な場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
（ベーステーブルは常に挿入可能ですが、ビューはそうとも限りません。）
      </entry>
     </row>

     <row>
      <entry><literal>is_typed</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the table is a typed table, <literal>NO</literal> if not</entry>
-->
      <entry>テーブルが型付けされたテーブルの場合<literal>YES</literal>、そうでなければ<literal>NO</literal>です。</entry>
     </row>

     <row>
      <entry><literal>commit_action</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Not yet implemented</entry>
-->
      <entry>未実装です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-triggered-update-columns">
  <title><literal>triggered_update_columns</literal></title>

  <para>
<!--
   For triggers in the current database that specify a column list
   (like <literal>UPDATE OF column1, column2</literal>), the
   view <literal>triggered_update_columns</literal> identifies these
   columns.  Triggers that do not specify a column list are not
   included in this view.  Only those columns are shown that the
   current user owns or has some privilege other than
   <literal>SELECT</literal> on.
-->
列リスト(<literal>UPDATE OF column1, column2</literal>など)を指定する現在のデータベース内のトリガに関して、<literal>triggered_update_columns</literal>ビューはこれらの列を識別します。
列リストを指定しないトリガはこのビューには含まれません。
これらの列の内、現在のユーザが所有するまたはSELECT以外の何らかの権限を持つもののみが示されます。
  </para>

  <table>
<!--
   <title><literal>triggered_update_columns</literal> Columns</title>
-->
   <title><literal>triggered_update_columns</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>trigger_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the trigger (always the current database)</entry>
-->
      <entry>トリガを持つデータベースの名前です(常に現在のデータベースです)。</entry>
     </row>

     <row>
      <entry><literal>trigger_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the trigger</entry>
-->
      <entry>トリガを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>trigger_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the trigger</entry>
-->
      <entry>トリガの名前です。</entry>
     </row>

     <row>
      <entry><literal>event_object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that the trigger
       is defined on (always the current database)
-->
トリガが定義されたテーブルを持つデータベースの名前です。(常に現在のデータベースです。)
      </entry>
     </row>

     <row>
      <entry><literal>event_object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table that the trigger is defined on</entry>
-->
      <entry>トリガが定義されたテーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>event_object_table</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table that the trigger is defined on</entry>
-->
      <entry>トリガが定義されたテーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>event_object_column</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column that the trigger is defined on</entry>
-->
      <entry>トリガが定義された列の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-triggers">
  <title><literal>triggers</literal></title>

  <para>
<!--
   The view <literal>triggers</literal> contains all triggers defined
   in the current database on tables and views that the current user owns
   or has some privilege other than <literal>SELECT</literal> on.
-->
<literal>triggers</literal>ビューには、現在のデータベース内で、現在のユーザが所有するあるいは何らかのSELECT以外の権限を持つテーブルまたはビューに定義された、全てのトリガがあります。
  </para>

  <table>
<!--
   <title><literal>triggers</literal> Columns</title>
-->
   <title><literal>triggers</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>trigger_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the trigger (always the current database)</entry>
-->
      <entry>トリガを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>trigger_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the trigger</entry>
-->
      <entry>トリガを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>trigger_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the trigger</entry>
-->
      <entry>トリガの名前です。</entry>
     </row>

     <row>
      <entry><literal>event_manipulation</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Event that fires the trigger (<literal>INSERT</literal>,
       <literal>UPDATE</literal>, or <literal>DELETE</literal>)
-->
トリガを発するイベントです
（<literal>INSERT</literal>、<literal>UPDATE</literal>もしくは<literal>DELETE</literal>です）。
      </entry>
     </row>

     <row>
      <entry><literal>event_object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that the trigger
       is defined on (always the current database)
-->
トリガが定義されたテーブルを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>event_object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the table that the trigger is defined on</entry>
-->
      <entry>トリガが定義されたテーブルを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>event_object_table</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the table that the trigger is defined on</entry>
-->
      <entry>トリガが定義されたテーブルの名前です。</entry>
     </row>

     <row>
      <entry><literal>action_order</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Not yet implemented</entry>
-->
      <entry>未実装です。</entry>
     </row>

     <row>
      <entry><literal>action_condition</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       <literal>WHEN</literal> condition of the trigger, null if none
       (also null if the table is not owned by a currently enabled
       role)
-->
トリガの<literal>WHEN</literal>条件です。なければNULLです
(現在有効なロールが所有していないテーブルの場合もNULLです)。
      </entry>
     </row>

     <row>
      <entry><literal>action_statement</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Statement that is executed by the trigger (currently always
       <literal>EXECUTE PROCEDURE
       <replaceable>function</replaceable>(...)</literal>)
-->
トリガによって実行される文です
（現在は常に<literal>EXECUTE PROCEDURE <replaceable>function</replaceable>(...)</literal>です）。
      </entry>
     </row>

     <row>
      <entry><literal>action_orientation</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Identifies whether the trigger fires once for each processed
       row or once for each statement (<literal>ROW</literal> or
       <literal>STATEMENT</literal>)
-->
トリガの発行が処理行ごとか文ごとかを識別します
（<literal>ROW</literal>もしくは<literal>STATEMENT</literal>です）。
      </entry>
     </row>

     <row>
      <entry><literal>action_timing</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Time at which the trigger fires (<literal>BEFORE</literal>,
       <literal>AFTER</literal>, or <literal>INSTEAD OF</literal>)
-->
トリガを発する時期です
（<literal>BEFORE</literal>、<literal>AFTER</literal>もしくは<literal>INSERT OF</literal>です）。
      </entry>
     </row>

     <row>
      <entry><literal>action_reference_old_table</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>action_reference_new_table</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>action_reference_old_row</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>action_reference_new_row</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>created</literal></entry>
      <entry><type>time_stamp</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Triggers in <productname>PostgreSQL</productname> have two
   incompatibilities with the SQL standard that affect the
   representation in the information schema.  First, trigger names are
   local to each table in <productname>PostgreSQL</productname>, rather
   than being independent schema objects.  Therefore there can be duplicate
   trigger names defined in one schema, so long as they belong to
   different tables.  (<literal>trigger_catalog</literal> and
   <literal>trigger_schema</literal> are really the values pertaining
   to the table that the trigger is defined on.)  Second, triggers can
   be defined to fire on multiple events in
   <productname>PostgreSQL</productname> (e.g., <literal>ON INSERT OR
   UPDATE</literal>), whereas the SQL standard only allows one.  If a
   trigger is defined to fire on multiple events, it is represented as
   multiple rows in the information schema, one for each type of
   event.  As a consequence of these two issues, the primary key of
   the view <literal>triggers</literal> is really
   <literal>(trigger_catalog, trigger_schema, event_object_table,
   trigger_name, event_manipulation)</literal> instead of
   <literal>(trigger_catalog, trigger_schema, trigger_name)</literal>,
   which is what the SQL standard specifies.  Nonetheless, if you
   define your triggers in a manner that conforms with the SQL
   standard (trigger names unique in the schema and only one event
   type per trigger), this will not affect you.
-->
<productname>PostgreSQL</productname>におけるトリガには、標準SQLと比べ、2つの非互換があり、これらは情報スキーマの表現に影響を与えます。
1つ目は、<productname>PostgreSQL</productname>ではトリガ名は、独立したスキーマオブジェクトではなく、それぞれのテーブル内で局所的であることです。
そのため、別のテーブルに属している場合、1つのスキーマ内でトリガ名を重複させることができます。
（<literal>trigger_catalog</literal>と<literal>trigger_schema</literal>は実際、そのトリガが定義されたテーブルに属する値となります。）
2つ目は、<productname>PostgreSQL</productname>ではトリガは複数のイベントで発行できる点です（例えば<literal>ON INSERT OR UPDATE</literal>です）。
一方、標準SQLでは1つのみしか許されません。
トリガが複数のイベントで発行するように定義された場合、それぞれのイベントで1行という形で、情報スキーマ内では複数の行として表現されます。
これらの2つの問題の結果、<literal>triggers</literal>ビューのプライマリキーは実際、標準SQLで定義された<literal>(trigger_catalog, trigger_schema, trigger_name)</literal>ではなく、<literal>(trigger_catalog, trigger_schema, event_object_table, trigger_name, event_manipulation)</literal>となります。
それでもなお、標準SQLに従う（スキーマ内でトリガ名を一意とし、トリガに対し1種類のイベントしか持たせないという）手法でトリガを定義していれば、これは影響ありません。
  </para>

  <note>
   <para>
<!--
    Prior to <productname>PostgreSQL</> 9.1, this view's columns
    <structfield>action_timing</structfield>,
    <structfield>action_reference_old_table</structfield>,
    <structfield>action_reference_new_table</structfield>,
    <structfield>action_reference_old_row</structfield>, and
    <structfield>action_reference_new_row</structfield>
    were named
    <structfield>condition_timing</structfield>,
    <structfield>condition_reference_old_table</structfield>,
    <structfield>condition_reference_new_table</structfield>,
    <structfield>condition_reference_old_row</structfield>, and
    <structfield>condition_reference_new_row</structfield>
    respectively.
    That was how they were named in the SQL:1999 standard.
    The new naming conforms to SQL:2003 and later.
-->
<productname>PostgreSQL</> 9.1 より前は、このビューの列の
<structfield>action_timing</structfield>、
<structfield>action_reference_old_table</structfield>、
<structfield>action_reference_new_table</structfield>、
<structfield>action_reference_old_row</structfield>、
<structfield>action_reference_new_row</structfield>
はそれぞれ
<structfield>condition_timing</structfield>、
<structfield>condition_reference_old_table</structfield>、
<structfield>condition_reference_new_table</structfield>、
<structfield>condition_reference_old_row</structfield>、
<structfield>condition_reference_new_row</structfield>
という名前でした。これらの命名は SQL: 1999標準におけるものです。新しい名前はSQL:2003以降に準拠しています。
   </para>
  </note>
 </sect1>

 <sect1 id="infoschema-udt-privileges">
  <title><literal>udt_privileges</literal></title>

  <para>
<!--
   The view <literal>udt_privileges</literal> identifies
   <literal>USAGE</literal> privileges granted on user-defined types to a
   currently enabled role or by a currently enabled role.  There is one row for
   each combination of column, grantor, and grantee.  This view shows only
   composite types (see under <xref linkend="infoschema-user-defined-types">
   for why); see
   <xref linkend="infoschema-usage-privileges"> for domain privileges.
-->
<literal>udt_privileges</literal>ビューは、現在有効なロールが付与者または被付与者である、ユーザ定義型に付与された<literal>USAGE</literal>権限を識別します。列、付与者、被付与者の組み合わせごとに行があります。このビューは複合データ型のみを表示します（理由は<xref linkend="infoschema-user-defined-types">を参照してください）。ドメイン権限については<xref linkend="infoschema-usage-privileges">を参照してください。
  </para>

  <table>
<!--
   <title><literal>udt_privileges</literal> Columns</title>
-->
   <title><literal>udt_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>udt_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the type (always the current database)</entry>
-->
      <entry>型を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>udt_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the type</entry>
-->
      <entry>型を持つスキーマの名前</entry>
     </row>

     <row>
      <entry><literal>udt_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the type</entry>
-->
      <entry>型の名前</entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>TYPE USAGE</literal></entry>
-->
      <entry>常に<literal>TYPE USAGE</literal></entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能であれば<literal>YES</literal>です。さもなくば<literal>NO</literal>です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-usage-privileges">
  <title><literal>usage_privileges</literal></title>

  <para>
<!--
   The view <literal>usage_privileges</literal> identifies
   <literal>USAGE</literal> privileges granted on various kinds of
   objects to a currently enabled role or by a currently enabled role.
   In <productname>PostgreSQL</productname>, this currently applies to
   collations, domains, foreign-data wrappers, foreign servers, and sequences.  There is one
   row for each combination of object, grantor, and grantee.
-->
<literal>usage_privileges</literal>ビューは、現在有効なロールに、もしくは現在有効なロールによって与えられた、各種オブジェクト上の<literal>USAGE</literal>権限を識別します。
これは今のところ、<productname>PostgreSQL</productname>では照合、ドメイン、外部データラッパ、外部サーバ、およびシーケンスに適用します。
オブジェクトと許可を与えた者、許可を受けた者の組み合わせごとに1行があります。
  </para>

  <para>
<!--
   Since collations do not have real privileges
   in <productname>PostgreSQL</productname>, this view shows implicit
   non-grantable <literal>USAGE</literal> privileges granted by the
   owner to <literal>PUBLIC</literal> for all collations.  The other
   object types, however, show real privileges.
-->
<productname>PostgreSQL</productname>では、照合は実際の権限を所有しませんので、このビューは全ての照合に対して所有者から<literal>PUBLIC</literal>に与えられた暗黙の付与できない<literal>USAGE</literal>権限を示します。
しかし、その他のオブジェクトの種類は実際の権限を示します。
  </para>

  <para>
<!--
   In PostgreSQL, sequences also support <literal>SELECT</literal>
   and <literal>UPDATE</literal> privileges in addition to
   the <literal>USAGE</literal> privilege.  These are nonstandard and therefore
   not visible in the information schema.
-->
PostgreSQLでは、シーケンスは<literal>USAGE</literal>に加えて<literal>SELECT</literal>と<literal>UPDATE</literal>権限もサポートします。これらは非標準であるため、情報スキーマのビューでは参照できません。
  </para>

  <table>
<!--
   <title><literal>usage_privileges</literal> Columns</title>
-->
   <title><literal>usage_privileges</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>grantor</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that granted the privilege</entry>
-->
      <entry>権限を与えたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>grantee</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the role that the privilege was granted to</entry>
-->
      <entry>権限が与えられたロールの名前です。</entry>
     </row>

     <row>
      <entry><literal>object_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database containing the object (always the current database)</entry>
-->
      <entry>オブジェクトを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>object_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema containing the object, if applicable,
      else an empty string</entry>
-->
      <entry>適用されるオブジェクトを持つスキーマの名前。そうでなければ空文字列</entry>
     </row>

     <row>
      <entry><literal>object_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the object</entry>
-->
      <entry>オブジェクトの名前です。</entry>
     </row>

     <row>
      <entry><literal>object_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry><literal>COLLATION</literal> or <literal>DOMAIN</literal> or <literal>FOREIGN DATA WRAPPER</literal> or <literal>FOREIGN SERVER</literal> or <literal>SEQUENCE</literal></entry>
-->
      <entry><literal>COLLATION</literal>または<literal>DOMAIN</literal>または<literal>FOREIGN DATA WRAPPER</literal>または<literal>FOREIGN SERVER</literal>または<literal>SEQUENCE</literal></entry>
     </row>

     <row>
      <entry><literal>privilege_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Always <literal>USAGE</literal></entry>
-->
      <entry>常に<literal>USAGE</literal>です。</entry>
     </row>

     <row>
      <entry><literal>is_grantable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry><literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not</entry>
-->
      <entry>権限が付与可能であれば<literal>YES</literal>、そうでなければ<literal>NO</literal></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-defined-types">
  <title><literal>user_defined_types</literal></title>

  <para>
<!--
   The view <literal>user_defined_types</literal> currently contains
   all composite types defined in the current database.
   Only those types are shown that the current user has access to (by way
   of being the owner or having some privilege).
-->
<literal>user_defined_types</literal>ビューは、現在は現在のデータベースで定義された全ての複合データ型を含みます。
表示される型は、現在のユーザが（所有者である、何らかの権限を持っているといった方法で）アクセスできるものだけです。
  </para>

  <para>
<!--
   SQL knows about two kinds of user-defined types: structured types
   (also known as composite types
   in <productname>PostgreSQL</productname>) and distinct types (not
   implemented in <productname>PostgreSQL</productname>).  To be
   future-proof, use the
   column <literal>user_defined_type_category</literal> to
   differentiate between these.  Other user-defined types such as base
   types and enums, which are <productname>PostgreSQL</productname>
   extensions, are not shown here.  For domains,
   see <xref linkend="infoschema-domains"> instead.
-->
SQLは二種類のユーザ定義データ型を知っています。構造化型（<productname>PostgreSQL</productname>では複合データ型として知られています）と特殊型（<productname>PostgreSQL</productname>では実装されていません）。将来を見越して、<literal>user_defined_type_category</literal>列をこれらを区別するために使用します。<productname>PostgreSQL</productname>の拡張である基本型や列挙型といった他のユーザ定義型はここには表示されません。
ドメインについては代わりに<xref linkend="infoschema-domains">を参照してください。
  </para>

  <table>
<!--
   <title><literal>user_defined_types</literal> Columns</title>
-->
   <title><literal>user_defined_types</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>user_defined_type_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the type (always the current database)</entry>
-->
      <entry>型を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>user_defined_type_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the type</entry>
-->
      <entry>型を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>user_defined_type_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the type</entry>
-->
      <entry>型の名前です。</entry>
     </row>

     <row>
      <entry><literal>user_defined_type_category</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Currently always <literal>STRUCTURED</literal>
-->
現在は常に<literal>STRUCTURED</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_instantiable</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_final</literal></entry>
      <entry><type>yes_or_no</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ordering_form</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ordering_category</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ordering_routine_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ordering_routine_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ordering_routine_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>reference_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>data_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_maximum_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_octet_length</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>character_set_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>collation_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>numeric_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>numeric_precision_radix</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>numeric_scale</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>datetime_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>interval_type</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>interval_precision</literal></entry>
      <entry><type>cardinal_number</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>source_dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>ref_dtd_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-mapping-options">
  <title><literal>user_mapping_options</literal></title>

  <para>
<!--
   The view <literal>user_mapping_options</literal> contains all the
   options defined for user mappings in the current database.  Only
   those user mappings are shown where the current user has access to
   the corresponding foreign server (by way of being the owner or
   having some privilege).
-->
<literal>user_mapping_options</literal>ビューは現在のデータベースでユーザマッピングに定義された全てのオプションを含みます。
現在のユーザが対応する外部サーバへのアクセスを所有しているとき（所有者または何らかの権限を持っていることで）表示されます。
  </para>

  <table>
<!--
   <title><literal>user_mapping_options</literal> Columns</title>
-->
   <title><literal>user_mapping_options</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>authorization_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the user being mapped,
      or <literal>PUBLIC</literal> if the mapping is public</entry>
-->
      <entry>マップされているユーザ名、
      またはマッピングがpublicであれば<literal>PUBLIC</literal>です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server used by this
      mapping is defined in (always the current database)</entry>
-->
      <entry>このマッピングにより使用される外部サーバが定義されたデータベース名です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server used by this mapping</entry>
-->
      <entry>このマッピングに使用される外部サーバ名です。</entry>
     </row>

     <row>
      <entry><literal>option_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of an option</entry>
-->
      <entry>オプションの名前です。</entry>
     </row>

     <row>
      <entry><literal>option_value</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Value of the option.  This column will show as null
      unless the current user is the user being mapped, or the mapping
      is for <literal>PUBLIC</literal> and the current user is the
      server owner, or the current user is a superuser.  The intent is
      to protect password information stored as user mapping
      option.</entry>
-->
      <entry>オプションの値です。
この列は、現在のユーザがマップされたユーザか、マッピングが<literal>PUBLIC</literal>用かつ現在のユーザがサーバ所有者、もしくは現在のユーザがスーパユーザでない限りNULLを示します。
ユーザマッピングオプションとして格納されているパスワード情報を保護するためです。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-mappings">
  <title><literal>user_mappings</literal></title>

  <para>
<!--
   The view <literal>user_mappings</literal> contains all user
   mappings defined in the current database.  Only those user mappings
   are shown where the current user has access to the corresponding
   foreign server (by way of being the owner or having some
   privilege).
-->
<literal>user_mappings</literal>ビューは現在のデータベースで定義されたユーザマッピングすべてを含みます。
現在のユーザが対応する外部サーバへアクセスを持っているとき（所有者か、何らかの権限を持っていることとして）それらのユーザのマッピングのみを示します。
  </para>

  <table>
<!--
   <title><literal>user_mappings</literal> Columns</title>
-->
   <title><literal>user_mappings</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>authorization_identifier</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the user being mapped,
      or <literal>PUBLIC</literal> if the mapping is public</entry>
-->
      <entry>マップされているユーザ名、またはマッピングがpublicの場合<literal>PUBLIC</literal>です。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that the foreign server used by this
      mapping is defined in (always the current database)</entry>
-->
      <entry>このマッピングにより使用される外部サーバが定義されたデータベース名です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>foreign_server_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the foreign server used by this mapping</entry>
-->
      <entry>このマッピングで使用された外部サーバ名です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-column-usage">
  <title><literal>view_column_usage</literal></title>

  <para>
<!--
   The view <literal>view_column_usage</literal> identifies all
   columns that are used in the query expression of a view (the
   <command>SELECT</command> statement that defines the view).  A
   column is only included if the table that contains the column is
   owned by a currently enabled role.
-->
<literal>view_column_usage</literal>ビューは、ビューの問い合わせ式（ビューを定義する<command>SELECT</command>文）で使用される全ての列を識別します。
現在有効なロールがその列を含むテーブルの所有者であるもののみが含まれます。
  </para>

  <note>
   <para>
<!--
    Columns of system tables are not included.  This should be fixed
    sometime.
-->
システムテーブルの列は含まれません。
これはいつか修正しなければなりません。
   </para>
  </note>

  <table>
<!--
   <title><literal>view_column_usage</literal> Columns</title>
-->
   <title><literal>view_column_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>view_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the view (always the current database)</entry>
-->
      <entry>ビューを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>view_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the view</entry>
-->
      <entry>ビューを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>view_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the view</entry>
-->
      <entry>ビューの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that contains the
       column that is used by the view (always the current database)
-->
ビューで使用される列を持つテーブルが含まれるデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the table that contains the
       column that is used by the view
-->
ビューで使用される列を持つテーブルが含まれるスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the table that contains the column that is used by the
       view
-->
ビューで使用される列を持つテーブルの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>column_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the column that is used by the view</entry>
-->
      <entry>ビューで使用される列の名前です。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-routine-usage">
  <title><literal>view_routine_usage</literal></title>

  <para>
<!--
   The view <literal>view_routine_usage</literal> identifies all
   routines (functions and procedures) that are used in the query
   expression of a view (the <command>SELECT</command> statement that
   defines the view).  A routine is only included if that routine is
   owned by a currently enabled role.
-->
<literal>view_routine_usage</literal>ビューは、ビューの問い合わせ式（ビューを定義する<command>SELECT</command>文）で使用されるすべてのルーチン（関数およびプロシージャ）を識別します。
現在有効なロールが所有するルーチンのみが含まれます。
  </para>

  <table>
<!--
   <title><literal>view_routine_usage</literal> Columns</title>
-->
   <title><literal>view_routine_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the view (always the current database)</entry>
-->
      <entry>ビューを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the view</entry>
-->
      <entry>ビューを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the view</entry>
-->
      <entry>ビューの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_catalog</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the database containing the function (always the current database)</entry>
-->
      <entry>関数を持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>specific_schema</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
<!--
      <entry>Name of the schema containing the function</entry>
-->
      <entry>関数を持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>specific_name</literal></entry>
      <entry><literal>sql_identifier</literal></entry>
      <entry>
<!--
       The <quote>specific name</quote> of the function.  See <xref
       linkend="infoschema-routines"> for more information.
-->
関数の<quote>仕様名称</quote>です。
詳細は<xref linkend="infoschema-routines">を参照してください。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-table-usage">
  <title><literal>view_table_usage</literal></title>

  <para>
<!--
   The view <literal>view_table_usage</literal> identifies all tables
   that are used in the query expression of a view (the
   <command>SELECT</command> statement that defines the view).  A
   table is only included if that table is owned by a currently
   enabled role.
-->
<literal>view_table_usage</literal>ビューは、ビューの問い合わせ式（ビューを定義する<command>SELECT</command>文）で使用されるすべてのテーブルを識別します。
現在有効なロールがそのテーブルの所有者であるもののみが含まれます。
  </para>

  <note>
   <para>
<!--
    System tables are not included.  This should be fixed sometime.
-->
システムテーブルは含まれません。
これはいつか修正しなければなりません。
   </para>
  </note>

  <table>
<!--
   <title><literal>view_table_usage</literal> Columns</title>
-->
   <title><literal>view_table_usage</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>view_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the view (always the current database)</entry>
-->
      <entry>ビューを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>view_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the view</entry>
-->
      <entry>ビューを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>view_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the view</entry>
-->
      <entry>ビューの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the database that contains the table that is
       used by the view (always the current database)
-->
ビューで使用されるテーブルを持つデータベースの名前です
（常に現在のデータベースです）。
      </entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the schema that contains the table that is used by the
       view
-->
ビューで使用されるテーブルを持つスキーマの名前です。
      </entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
      <entry>
<!--
       Name of the table that is used by the view
-->
ビューで使用されるテーブルの名前です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-views">
  <title><literal>views</literal></title>

  <para>
<!--
   The view <literal>views</literal> contains all views defined in the
   current database.  Only those views are shown that the current user
   has access to (by way of being the owner or having some privilege).
-->
<literal>views</literal>ビューには、現在のデータベースで定義されたすべてのビューがあります。
現在のユーザが（所有者である、何らかの権限を持っているといった方法で）アクセスすることができるビューのみが表示されます。
  </para>

  <table>
<!--
   <title><literal>views</literal> Columns</title>
-->
   <title><literal>views</literal>の列</title>

   <tgroup cols="3">
    <thead>
     <row>
<!--
      <entry>Name</entry>
      <entry>Data Type</entry>
      <entry>Description</entry>
-->
      <entry>名前</entry>
      <entry>データ型</entry>
      <entry>説明</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>table_catalog</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the database that contains the view (always the current database)</entry>
-->
      <entry>ビューを持つデータベースの名前です（常に現在のデータベースです）。</entry>
     </row>

     <row>
      <entry><literal>table_schema</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the schema that contains the view</entry>
-->
      <entry>ビューを持つスキーマの名前です。</entry>
     </row>

     <row>
      <entry><literal>table_name</literal></entry>
      <entry><type>sql_identifier</type></entry>
<!--
      <entry>Name of the view</entry>
-->
      <entry>ビューの名前です。</entry>
     </row>

     <row>
      <entry><literal>view_definition</literal></entry>
      <entry><type>character_data</type></entry>
      <entry>
<!--
       Query expression defining the view (null if the view is not
       owned by a currently enabled role)
-->
ビューを定義する問い合わせ式です
（現在有効なロールがビューの所有者でない場合はNULLです）。
      </entry>
     </row>

     <row>
      <entry><literal>check_option</literal></entry>
      <entry><type>character_data</type></entry>
<!--
      <entry>Applies to a feature not available in <productname>PostgreSQL</></entry>
-->
      <entry><productname>PostgreSQL</>で利用できない機能に適用されるものです。</entry>
     </row>

     <row>
      <entry><literal>is_updatable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the view is updatable (allows
       <command>UPDATE</command> and <command>DELETE</command>),
       <literal>NO</literal> if not
-->
ビューが更新可能（<command>UPDATE</command>および<command>DELETE</command>が可能）な場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_insertable_into</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</literal> if the view is insertable into (allows
       <command>INSERT</command>), <literal>NO</literal> if not
-->
ビューが挿入可能（<command>INSERT</command>が可能）な場合<literal>YES</literal>、さもなくば<literal>NO</literal>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_trigger_updatable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</> if the view has an <literal>INSTEAD OF</>
       <command>UPDATE</> trigger defined on it, <literal>NO</> if not
-->
ビューに<literal>INSTEAD OF</> <command>UPDATE</>トリガーが定義されている場合は<literal>YES</>、、さもなくば<literal>NO</>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_trigger_deletable</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</> if the view has an <literal>INSTEAD OF</>
       <command>DELETE</> trigger defined on it, <literal>NO</> if not
-->
ビューに<literal>INSTEAD OF</> <command>DELETE</>トリガーが定義されている場合は<literal>YES</>、さもなくば<literal>NO</>です。
      </entry>
     </row>

     <row>
      <entry><literal>is_trigger_insertable_into</literal></entry>
      <entry><type>yes_or_no</type></entry>
      <entry>
<!--
       <literal>YES</> if the view has an <literal>INSTEAD OF</>
       <command>INSERT</> trigger defined on it, <literal>NO</> if not
-->
ビューに<literal>INSTEAD OF</> <command>INSERT</>トリガーが定義されている場合は<literal>YES</>、さもなくば<literal>NO</>です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

</chapter>
